{"version":3,"sources":["webpack:///./src/app/stations/station/history.service.ts","webpack:///./src/app/shared/models/test-state.model.ts","webpack:///./node_modules/@angular/common/@angular/common/http.es5.js","webpack:///./node_modules/@angular/forms/@angular/forms.es5.js","webpack:///./src/app/core/flash-message.model.ts","webpack:///./src/app/plugs/plugs.module.ts","webpack:///./src/app/shared/progress-bar.component.ts","webpack:///./node_modules/timeago.js/esm/utils/date.js","webpack:///./src/app/shared/animations.ts","webpack:///./src/app/stations/station-list/dashboard.service.ts","webpack:///./src/app/shared/subscription.ts","webpack:///./src/app/stations/station/history-item.model.ts","webpack:///./src/app/stations/station/station-data.ts","webpack:///./src/app/stations/station/station.service.ts","webpack:///./src/app/core/config.service.ts","webpack:///./src/app/shared/util.ts","webpack:///./src/app/core/flash-message.service.ts","webpack:///./node_modules/@angular/animations/@angular/animations.es5.js","webpack:///./src/app/shared/models/station.model.ts","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./node_modules/@angular/platform-browser/@angular/platform-browser/animations.es5.js","webpack:///./node_modules/@angular/animations/@angular/animations/browser.es5.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/flash-messages.component.ts","webpack:///./src/app/core/flash-messages.component.html","webpack:///./src/app/core/flash-messages.component.scss","webpack:///./src/app/shared/elapsed-time.pipe.ts","webpack:///./src/app/shared/focus.directive.ts","webpack:///./src/app/shared/genealogy-node.component.ts","webpack:///./src/app/shared/genealogy-node.component.html","webpack:///./src/app/shared/genealogy-node.component.scss","webpack:///./src/app/shared/log-level-to-class.pipe.ts","webpack:///./src/app/shared/object-to-sorted-values.pipe.ts","webpack:///./src/app/shared/progress-bar.component.html","webpack:///./src/app/shared/progress-bar.component.scss","webpack:///./src/app/shared/status-pipes.ts","webpack:///./src/app/shared/time-ago.pipe.ts","webpack:///./node_modules/timeago.js/esm/index.js","webpack:///./node_modules/timeago.js/esm/lang/en_US.js","webpack:///./node_modules/timeago.js/esm/lang/zh_CN.js","webpack:///./node_modules/timeago.js/esm/format.js","webpack:///./node_modules/timeago.js/esm/realtime.js","webpack:///./node_modules/timeago.js/esm/utils/dom.js","webpack:///./src/app/shared/tooltip.directive.ts","webpack:///./src/app/shared/trimmed-text.component.ts","webpack:///./src/app/plugs/user-input-plug.component.ts","webpack:///./src/app/plugs/base-plug.ts","webpack:///./src/app/plugs/user-input-plug.component.html","webpack:///./src/app/plugs/user-input-plug.component.scss","webpack:///./src/app/stations/stations.module.ts","webpack:///./src/app/stations/station-list/station-list.component.ts","webpack:///./src/app/stations/station-list/station-list.component.html","webpack:///./src/app/stations/station-list/station-list.component.scss","webpack:///./src/app/stations/station/attachments.component.ts","webpack:///./src/app/stations/station/attachments.component.html","webpack:///./src/app/stations/station/attachments.component.scss","webpack:///./src/app/stations/station/history.component.ts","webpack:///./src/app/shared/models/attachment.model.ts","webpack:///./src/app/stations/station/history.component.html","webpack:///./src/app/stations/station/history.component.scss","webpack:///./src/app/stations/station/logs.component.ts","webpack:///./src/app/stations/station/logs.component.html","webpack:///./src/app/stations/station/logs.component.scss","webpack:///./src/app/stations/station/phase-list.component.ts","webpack:///./src/app/stations/station/phase-list.component.html","webpack:///./src/app/stations/station/phase.component.ts","webpack:///./src/app/stations/station/phase.component.html","webpack:///./src/app/stations/station/phase.component.scss","webpack:///./src/app/stations/station/station.component.ts","webpack:///./src/app/stations/station/station.component.html","webpack:///./src/app/stations/station/station.component.scss","webpack:///./src/app/stations/station/test-summary.component.ts","webpack:///./src/app/stations/station/test-summary.component.html","webpack:///./src/app/stations/station/test-summary.component.scss","webpack:///./src/app/shared/models/phase.model.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/time.service.ts","webpack:///./src/app/shared/models/log-record.model.ts","webpack:///./src/app/shared/sock-js.service.ts","webpack:///./src/app/shared/models/measurement.model.ts","webpack:///./node_modules/timeago.js/esm/register.js"],"names":["http_1","__webpack_require__","core_1","config_service_1","flash_message_service_1","util_1","history_item_model_1","station_data_1","HistoryService","config","http","flashMessage","this","cache","history","prototype","getCache","station","hostPort","getHistory","loadItem","historyItem","_this","status","HistoryItemStatus","loading","loaded","Error","url","getStationBaseUrl","dashboardEnabled","fileName","get","toPromise","then","rawTestState","testState","makeTest","uniqueId","catch","error","Promise","reject","prependItemFromTestState","HistoryItem","drawAttention","dutId","startTimeMillis","unshift","refreshList","response","rawHistoryItems","data","length","stationHistory","map","rawItem","dut_id","file_name","start_time_millis","unloaded","sortByProperty","_a","push","apply","console","info","tooltip","messageFromHttpClientErrorResponse","retrieveFileName","rawHistoryItem","__decorate","Injectable","ConfigService","HttpClient","FlashMessageService","exports","TestStatus","PlugDescriptor","TestState","params","Object","assign","HttpHandler","handle","req","HttpBackend","HttpUrlEncodingCodec","encodeKey","k","standardEncoding","encodeValue","v","decodeKey","decodeURIComponent","decodeValue","encodeURIComponent","replace","HttpParams","options","updates","cloneFrom","encoder","fromString","paramParser","rawParams","codec","map$$1","Map","split","forEach","param","eqIdx","indexOf","slice","key","val","list","set","has","init","res","getAll","keys","Array","from","append","value","clone","op","delete","toString","eKey","join","update","concat","base","undefined","base_1","idx","splice","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","line","index","name","toLowerCase","trim","maybeSetNormalizedName","values","lcName","copyFrom","applyUpdate","other","toDelete_1","existing","filter","fn","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","method","third","fourth","body","reportProgress","withCredentials","responseType","toUpperCase","mightHaveBody","urlWithParams","qIdx","sep","serializeBody","isArray","JSON","stringify","detectContentTypeHeader","type","setHeaders","reduce","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpResponseBase","defaultStatus","defaultStatusText","statusText","ok","HttpHeaderResponse","_super","call","__WEBPACK_IMPORTED_MODULE_0_tslib__","HttpResponse","HttpErrorResponse","message","addBody","observe","handler","request","first","events$","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__","res$","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__","event","__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__","head","jsonp","callbackParam","patch","post","put","decorators","__WEBPACK_IMPORTED_MODULE_1__angular_core__","ctorParameters","HttpInterceptorHandler","next","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","nextRequestId","JsonpCallbackContext","JsonpClientBackend","callbackMap","document","nextCallback","__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__","observer","callback","node","createElement","src","finished","cancelled","cleanup","parentNode","removeChild","onLoad","complete","onError","addEventListener","appendChild","removeEventListener","args","__WEBPACK_IMPORTED_MODULE_6__angular_common__","JsonpInterceptor","XSSI_PREFIX","XhrFactory","build","BrowserXhr","XMLHttpRequest","HttpXhrBackend","xhrFactory","xhr","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","getAllResponseHeaders","getResponseUrl","responseURL","test","getResponseHeader","responseText","parse","text","sentHeaders","onDownProgress","progressEvent","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","getToken","HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","token","interceptingHandler","backend","interceptors","reduceRight","jsonpCallbackContext","window","HttpClientXsrfModule","disable","ngModule","providers","provide","useClass","withOptions","useValue","useExisting","multi","HttpClientModule","imports","useFactory","deps","HttpClientJsonpModule","AbstractControlDirective","control","defineProperty","enumerable","configurable","valid","invalid","pending","disabled","enabled","errors","pristine","dirty","touched","untouched","statusChanges","valueChanges","reset","hasError","errorCode","path","getError","ControlContainer","arguments","isEmptyInputValue","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","parseFloat","isNaN","actual","max","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","regexStr","regex","RegExp","requiredPattern","actualValue","nullValidator","c","compose","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","composeAsync","observables","_executeAsyncValidators","toObservable","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_forkJoin__","o","r","obs","__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromPromise__","arrayOfErrors","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","_renderer","_elementRef","onChange","_","onTouched","writeValue","setProperty","nativeElement","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selector","host","(change)","(blur)","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","_isAndroid","userAgent","__WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__","getUserAgent","normalizedValue","_handleInput","_compositionStart","_compositionEnd","normalizeValidator","validator","validate","normalizeAsyncValidator","(input)","(compositionstart)","(compositionend)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","unimplemented","NgControl","_parent","valueAccessor","_rawValidators","_rawAsyncValidators","viewToModelUpdate","newValue","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","remove","i","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","propDecorators","RANGE_VALUE_ACCESSOR","RangeValueAccessor","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","id","_optionMap","_idCounter","_compareWith","_getOptionId","valueString","_getOptionValue","_registerOption","_i","_extractId","compareWith","NgSelectOption","_element","_select","_setElementValue","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","optionSelectedStateSetter","ids_1","opt","_setSelected","selected","hasOwnProperty","selectedOptions","item","_value","_extractId$1","NgSelectMultipleOption","controlPath","parent","setUpControl","dir","_throwError","asyncValidator","markAsDirty","setValue","emitModelToViewChange","markAsTouched","emitModelEvent","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","setUpFormContainer","_noControlError","messageEnd","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","change","isFirstChange","currentValue","BUILTIN_ACCESSORS","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","constructor","isBuiltInAccessor","some","a","AbstractFormGroupDirective","_checkParentType","addFormGroup","formDirective","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NgControlStatus","NgControlStatusGroup","coerceToValidator","coerceToAsyncValidator","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","opts","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","_updateValue","emitEvent","emit","_updateAncestors","changeFn","enable","setParent","patchValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","subscribe","setErrors","unsubscribe","_updateControlsErrors","_find","delimiter","FormGroup","controls","FormArray","at","x","_initObservables","_anyControlsHaveStatus","cb","_anyControls","condition","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","_clearChangeFns","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","formDirectiveProvider","NgForm","resolvedPromise","resolve","asyncValidators","_submitted","ngSubmit","form","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","FormErrorExamples","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","modelGroupProvider","NgModelGroup","formControlBinding","NgModel","resolvedPromise$1","_registered","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","warn","formControlBinding$1","FormControlDirective","_isControlChanged","formDirectiveProvider$1","FormGroupDirective","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","el","addFormArray","removeFormArray","getFormArray","newCtrl","cleanUpControl","_oldForm","sync","async","formGroupNameProvider","FormGroupName","_hasInvalidParent","formArrayNameProvider","FormArrayName","controlNameBinding","FormControlName","_added","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_required","[attr.required]","EMAIL_VALIDATOR","EmailValidator","_enabled","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","VERSION","NgNoValidate","novalidate","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","declarations","FormsModule","ReactiveFormsModule","messageCount","FlashMessageType","FlashMessage","content","isDismissed","hasTooltip","Boolean","showTooltip","common_1","forms_1","shared_module_1","user_input_plug_component_1","PlugsModule","NgModule","CommonModule","HttpModule","SharedModule","UserInputPlugComponent","ProgressBarComponent","isReset","width","transition","Math","Input","Component","template","styles","formatDiff","diff","localeFunc","agoIn","totalSec","abs","SEC_ARRAY","floor","diffSec","date","relativeDate","toDate","Date","__webpack_exports__","nextInterval","rst","d","ceil","input","animations_1","washIn","state","style","background","animate","washAndExpandIn","maxHeight","max-height","station_model_1","sock_js_service_1","subscription_1","dashboardUrl","devHost","dashboardStatusMap","UNREACHABLE","StationStatus","unreachable","ONLINE","online","DashboardService","sockJsService","stations","messages","DashboardService_1","validateResponse","newStations","parseResponse","applyResponse","__extends","retryMs","retryBackoff","retryMax","Number","MAX_VALUE","subscribeToUrl","rawStation","Station","cell","label","getStationLabel","port","stationId","station_id","testDescription","test_description","testName","test_name","newStation","_b","_c","urlHost","SockJsService","Subscription","SubscriptionState","Subject_1","Subject","retryTimeMs","currentRetryMs","retryTimeoutId","sock","unsubscribed","failed","waiting","subscribing","refresh","subscribeWithSavedParams","retryNow","cancelTimeout","debug","close","clearTimeout","sockJs","onopen","subscribed","onclose","now","setTimeout","onmessage","attachment_model_1","log_record_model_1","measurement_model_1","phase_model_1","test_state_model_1","testStateStatusCompleted","testStateStatusMap","WAITING_FOR_TEST_START","RUNNING","running","testRecordOutcomeMap","PASS","pass","FAIL","fail","ERROR","TIMEOUT","timeout","ABORTED","aborted","measurementStatusMap","MeasurementStatus","UNSET","unset","PARTIALLY_SET","phaseRecordOutcomeMap","PhaseStatus","SKIP","skip","makePhase","phase","measurements","attachments","rawAttachment","Attachment","mimeType","mimetype","phaseDescriptorId","descriptor_id","phaseName","sha1","rawMeasuredValue","measured_value","measuredValue","Measurement","outcome","Phase","descriptorId","endTimeMillis","end_time_millis","makeLog","log","LogRecord","level","lineNumber","lineno","loggerName","logger_name","source","timestampMillis","timestamp_millis","rawState","testId","logRecords","test_record","log_records","reverse","logs","phases","running_phase_state","accumulator","metadata","plugDescriptors","plugs","plug_descriptors","plugStates","plug_states","makePhaseFromDescriptor","descriptor","measurement","Observable_1","history_service_1","StationService","historyService","phaseDescriptorPromise","testsById","testsByStation","messagesSubscription","mergeMap","StationService_1","applyPhaseDescriptors","stationUrl","getTest","test_uid","getOrRequestPhaseDescriptors","descriptors","numExecutedPhases","lastExecutedPhaseIndex","lastExecutedDescriptorIndex","lastExecuted","descriptors_1","Observable","of","getTestBaseUrl","json","messageFromErrorResponse","fromPromise","oldTest","Http","defaultConfig","server_type","history_from_disk_enabled","initialize","extraKeys","extraKeys_1","location","localhostAddress","errorBody","e","_body","ErrorEvent","property","sort","b","flash_message_model_1","dismissalJob","cancelDismissal","dismissEarly","dismiss","startDismissal","addMessage","shift","dismissalDurationMs","ɵPRE_STYLE","AnimationBuilder","animation","AnimationFactory","create","element","AUTO_STYLE","trigger","definitions","timings","steps","sequence","tokens","offset","keyframes","stateChangeExpr","expr","animateChild","useAnimation","query","stagger","scheduleMicroTask","NoopAnimationPlayer","_onDoneFns","_onStartFns","_onDestroyFns","_started","_destroyed","_finished","parentPlayer","totalTime","_onFinish","onStart","onDone","onDestroy","hasStarted","play","triggerMicrotask","_onStart","pause","restart","finish","destroy","setPosition","p","getPosition","AnimationGroupPlayer","_players","doneCount","destroyCount","startCount","player","_onDestroy","time","timeAtPosition","position","beforeDestroy","players","platform_browser_dynamic_1","app_module_1","main","platformBrowserDynamic","bootstrapModule","AppModule","MODULE_REF","enableProdMode","readyState","platform_browser_1","http_2","app_component_1","core_module_1","plugs_module_1","stations_module_1","hmr_1","appRef","hmrOnInit","store","hmrOnDestroy","cmpLocation","components","cmp","disposeOldHosts","createNewHosts","removeNgStyles","hmrAfterDestroy","BrowserAnimationsModule","BrowserModule","CoreModule","StationsModule","AppComponent","bootstrap","ApplicationRef","BrowserAnimationBuilder","rootRenderer","_nextAnimationId","typeData","encapsulation","None","createRenderer","entry","__WEBPACK_IMPORTED_MODULE_3__angular_animations__","issueAnimationCommand","BrowserAnimationFactory","__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__","_id","RendererAnimationPlayer","_command","_listen","eventName","listen","command","renderer","AnimationRendererFactory","delegate","engine","_zone","_currentId","_microtaskId","_animationCallbacksBuffer","_rendererCache","_cdRecurDepth","onRemovalComplete","hostElement","BaseAnimationRenderer","componentId","namespaceId","register","registerTrigger","AnimationRenderer","begin","_scheduleCountTask","Zone","current","scheduleListenerCallback","count","run","tuple","end","runOutsideAngular","flush","whenRenderingDone","__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__","destroyNode","n","namespace","createComment","createText","newChild","onInsert","insertBefore","refChild","oldChild","onRemove","selectRootElement","selectorOrNode","nextSibling","setAttribute","removeAttribute","addClass","removeClass","setStyle","flags","removeStyle","charAt","disableAnimations","target","factory","process","substr","resolveElementFromTarget","parseTriggerCallbackName","triggerName","dotIndex","substring","countId","InjectableAnimationEngine","driver","normalizer","instantiateSupportedAnimationDriver","instantiateDefaultStyleNormalizer","instantiateRendererFactory","zone","SHARED_ANIMATION_PROVIDERS","BROWSER_ANIMATIONS_PROVIDERS","BROWSER_NOOP_ANIMATIONS_PROVIDERS","NoopAnimationsModule","optimizeGroupPlayer","__WEBPACK_IMPORTED_MODULE_1__angular_animations__","normalizeKeyframes","preStyles","postStyles","normalizedKeyframes","previousOffset","previousKeyframe","kf","isSameOffset","normalizedKeyframe","prop","normalizedProp","normalizePropertyName","normalizeStyleValue","listenOnPlayer","copyAnimationEvent","makeAnimationEvent","fromState","toState","getOrSetAsInMap","defaultValue","parseTimelineCommand","separatorPos","_contains","elm1","elm2","_matches","_query","Element","matches","proto","fn_1","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","results","querySelectorAll","elm","querySelector","matchesElement","containsElement","invokeQuery","NoopAnimationDriver","computeStyle","duration","delay","easing","previousPlayers","AnimationDriver","NOOP","ONE_SECOND","ENTER_SELECTOR","LEAVE_SELECTOR","NG_TRIGGER_SELECTOR","NG_ANIMATING_SELECTOR","resolveTimingValue","match","_convertTimeValueToMS","unit","resolveTiming","allowNegativeValues","parseTimeExpression","exp","delayMatch","easingVal","containsErrors","startIndex","copyObj","obj","destination","normalizeStyles","normalizedStyles","copyStyles","readPrototype","setStyles","camelProp","dashCaseToCamelCase","eraseStyles","normalizeAnimationEntry","PARAM_REGEX","SUBSTITUTION_EXPR_START","extractStyleParams","exec","lastIndex","interpolateParams","original","str","varName","localVal","iteratorToArray","iterator","arr","done","DASH_CASE_REGEXP","m","visitDslNode","visitor","context","visitTrigger","visitState","visitTransition","visitSequence","visitGroup","visitAnimate","visitKeyframes","visitStyle","visitReference","visitAnimateChild","visitAnimateRef","visitQuery","visitStagger","ANY_STATE","parseTransitionExpr","transitionValue","expressions","parseInnerTransitionStr","eventStr","parseAnimationAlias","alias","separator","makeLambdaFromStates","isFullAnyStateExpr","TRUE_BOOLEAN_VALUES","Set","FALSE_BOOLEAN_VALUES","lhs","rhs","LHS_MATCH_BOOLEAN","RHS_MATCH_BOOLEAN","lhsMatch","rhsMatch","SELF_TOKEN","SELF_TOKEN_REGEX","buildAnimationAst","AnimationAstBuilderVisitor","LEAVE_TOKEN_REGEX","ENTER_TOKEN_REGEX","AnimationAstBuilderContext","_resetContextStyleTimingState","currentQuerySelector","collectedStyles","currentTime","queryCount","depCount","states","transitions","def","stateDef_1","styleAst","astParams","containsDynamicStyles","missingSubs_1","params_1","isObject","stylesObj_1","sub","size","missingSubsArr","matchers","normalizeAnimationOptions","s","furthestTime","step","innerAst","timingAst","constructTimingAst","makeTimingAst","strValue","ast","dynamic","currentAnimateTimings","styleMetadata","styleMetadata_1","isEmpty","newStyleData","_styleAst","isEmptyStep","_makeStyleAst","_validateStyleAst","styleTuple","collectedEasing","styleData","styleMap","endTime","startTime","collectedEntry","updateCollectedStyle","validateStyleParams","totalKeyframesWithOffsets","offsets","offsetsOutOfOrder","keyframesOutOfRange","style$$1","offsetVal","consumeOffset","generatedOffset","limit","animateDuration","durationUpToThisFrame","parentSelector","currentQuery","normalizeSelector","hasAmpersand","find","includeSelf","optional","originalSelector","currentTransition","normalizeParams","createTimelineInstruction","preStyleProps","postStyleProps","subTimeline","ElementInstructionMap","_map","consume","instructions","existingInstructions","clear","buildAnimationTimelines","rootElement","startingStyles","finalStyles","subInstructions","AnimationTimelineBuilderVisitor","buildKeyframes","AnimationTimelineContext","currentTimeline","timelines","timeline","containsAnimation","tl","allowOnlyTimelineStyles","elementInstructions","innerContext","createSubContext","_visitSubInstructions","transformIntoNewTimeline","previousNode","instruction","instructionTimings","appendInstructionToTimeline","updateOptions","subContextCount","ctx","snapshotCurrentStyles","DEFAULT_NOOP_PREVIOUS_NODE","delayNextStep","applyStylesToKeyframe","innerTimelines","mergeTimelineCollectedStyles","_visitTiming","incrementTime","getCurrentStyleProperties","forwardFrame","applyEmptyStep","innerTimeline","forwardTime","elms","currentQueryTotal","sameElementTimeline","currentQueryIndex","parentContext","maxTime","currentStaggerTime","startingTime","_driver","initialTimeline","TimelineBuilder","skipIfExists","newOptions","optionsToUpdate","newParams","paramsToUpdate_1","_copyOptions","oldParams_1","params_2","newTime","fork","updatedTimings","builder","SubTimelineBuilder","stretchStartingKeyframe","elements","_elementTimelineStylesLookup","_previousKeyframe","_currentKeyframe","_keyframes","_styleSummary","_pendingStyles","_backFill","_currentEmptyStepKeyframe","_localTimelineStyles","_globalTimelineStyles","_loadKeyframe","hasPreStyleStep","_updateStyle","flattenStyles","allStyles","allProperties","props","getFinalKeyframe","properties","details0","details1","finalKeyframes","keyframe","finalKeyframe","preProps","postProps","kf0","kf1","_stretchStartingKeyframe","newKeyframes","startingGap","newFirstKeyframe","oldFirstKeyframe","roundOffset","timeAtKeyframe","decimalPoints","mult","pow","round","Animation","errorMessage","_animationAst","buildTimelines","destinationStyles","start","dest","result","AnimationStyleNormalizer","WebAnimationsStyleNormalizer","NoopAnimationStyleNormalizer","propertyName","userProvidedProperty","normalizedProperty","strVal","DIMENSIONAL_PROP_MAP","valAndSuffixMatch","makeBooleanMap","createTransitionInstruction","isRemovalTransition","fromStyles","toStyles","queriedElements","EMPTY_OBJECT","AnimationTransitionFactory","_triggerName","_stateStyles","currentState","nextState","oneOrMoreTransitionsMatch","matchFns","buildStyles","stateName","backupStateStyler","stateStyler","backupStyles","currentOptions","nextOptions","transitionAnimationParams","currentAnimationParams","currentStateStyles","nextAnimationParams","nextStateStyles","preStyleMap","postStyleMap","isRemoval","animationOptions","queriedElementsList","AnimationStateStyles","defaultParams","combinedParams","styleObj_1","AnimationTrigger","transitionFactories","balanceProperties","fallbackTransition","createFallbackTransition","matchTransition","f","matchStyles","key1","key2","EMPTY_INSTRUCTION_MAP","TimelineAnimationEngine","_normalizer","_animations","_playersById","_buildPlayer","autoStylesMap","inst","_getPlayer","baseEvent","EMPTY_PLAYER_ARRAY","NULL_REMOVAL_STATE","setForRemoval","hasAnimation","removedBeforeQueried","NULL_REMOVED_QUERIED_STATE","REMOVAL_FLAG","StateValue","isObj","normalizeTriggerValue","absorbOptions","oldParams_2","DEFAULT_STATE_VALUE","DELETED_STATE_VALUE","AnimationTransitionNamespace","_engine","_triggers","_queue","_elementListeners","_hostClassName","isTriggerEventValid","listeners","triggersWithStates","statesByElement","NG_TRIGGER_CLASSNAME","afterFlush","_getTrigger","defaultToFallback","TransitionAnimationPlayer","playersOnElement","playersByElement","queued","isFallbackTransition","totalQueuedPlayers","index_1","objEquals","k1","k2","fromStyles_1","toStyles_1","reportError","deregister","stateMap","clearElementCache","elementPlayers","_destroyInnerNodes","containsClass","className","classList","classes","CLASSES_CACHE_KEY","innerNs","namespacesByHostElement","removeNode","doNotRecurse","childElementCount","triggerStates","players_1","markElementAsRemoved","processLeaveNode","containsPotentialParentTransition","totalAnimations","currentPlayers","playersByQueriedElement","visitedTriggers_1","listener","destroyInnerAnimations","_onRemovalComplete","insertNode","drainQueuedTransitions","microtaskId","destroyed","markedForDestroy","d0","d1","elementContainsData","containsData","TransitionAnimationEngine","newHostElements","disabledNodes","_namespaceLookup","_namespaceList","_flushFns","_whenQuietFns","collectedEnterElements","collectedLeaveElements","ns","createNamespace","_balanceNamespaceList","collectEnterElement","found","nextNamespace","_fetchNamespace","afterFlushAnimationsDone","isElementNode","details","markElementAsDisabled","_buildInstruction","subTimelines","containerElement","cleanupFns","_flushAnimations","quietFns_1","skippedPlayers","skippedPlayersMap","queuedInstructions","allPreStyleElements","allPostStyleElements","disabledElementsSet","nodesThatAreDisabled","bodyNode","getBodyNode","allEnterNodes","createIsRootFilterFn","nodes","isRoot","nodeSet","knownRootContainer","allLeaveNodes","leaveNodesWithoutAnimations","allPlayers","erroneousTransitions","stringMap","setVal_1","setVal","errors_1","enterNodesWithoutAnimations","allPreviousPlayersMap","sortedParentElements","_beforeAnimationBuild","_getPreviousPlayers","prevPlayer","replaceNodes","replacePostStylesAsPre","cloakAndComputeStyles","postStylesMap","preStylesMap","pre","rootPlayers","subPlayers","innerPlayer","_buildAnimation","setRealPlayer","parentHasPriority","parentPlayers","playersForElement","queriedPlayerResults","queriedInnerElements","j","queriedPlayers","activePlayers","removeNodesAfterAnimationDone","isQueriedElement","toStateValue","queriedElementPlayers","isRemovalAnimation_1","targetNameSpaceId","targetTriggerName","timelineInstruction","realPlayer","getRealPlayer","allQueriedPlayers","allConsumedElements","allSubElements","allNewPlayers","flattenGroupPlayers","finalPlayers","_flattenGroupPlayersRecur","pp","wrappedPlayer","deleteOrUnsetInMap","currentValues","_player","_containsRealPlayer","_queuedCallbacks","_queueEvent","cloakElement","oldValue","display","elementPropsMap","defaultStyle","cloakVals","valuesMap","failedElements","postEntry","preEntry","AnimationEngine","_triggerCache","_transitionEngine","_timelineEngine","cacheKey","buildTrigger","action","eventPhase","WebAnimationsPlayer","_initialized","previousStyles","currentSnapshot","_duration","_delay","allowPreviousPlayerStylesMerge","_preparePlayerBeforeStart","previousStyleProps","startingKeyframe_1","missingStyleProps_1","self_1","_loop_1","_computeStyle","_triggerWebAnimation","_finalKeyframe","_resetDomPlayerState","cancel","getComputedStyle","WebAnimationsDriver","playerOptions","fill","previousWebAnimationPlayers","supportsWebAnimations","configService","ref","selectedStation","configString","getAttribute","ElementRef","module","flash_messages_component_1","parentModule","FlashMessagesComponent","FlashMessageTypeToClass","__param","Optional","SkipSelf","typeToCssClass","transform","Pipe","onMouseEnter","onMouseExit","time_service_1","ElapsedTimePipe","format","getElapsedTimeString","last","endTimeMs","elapsedSeconds","elapsedMinutes","seconds","elapsedHours","pure","TimeService","FocusDirective","focusOn","focus","Directive","GenealogyNodeComponent","maxDepth","childMaxDepth","LogLevelToClassPipe","logLevels","warning","ObjectToSortedValuesPipe","object","sortBy","asArray","keys_1","StatusCategory","categoryToCssClass","unknownStatus","Symbol","statusToCategory","statusToText","StatusToClassPipe","StatusToTextPipe","timeago_js_1","TimeAgoPipe","__WEBPACK_IMPORTED_MODULE_2__register__","__WEBPACK_IMPORTED_MODULE_0__lang_en_US__","__WEBPACK_IMPORTED_MODULE_1__lang_zh_CN__","EN_US","ZH_CN","locale","sec","__WEBPACK_IMPORTED_MODULE_0__utils_date__","__WEBPACK_IMPORTED_MODULE_1__register__","__WEBPACK_IMPORTED_MODULE_0__utils_dom__","TIMER_POOL","render","nodeList","minInterval","__WEBPACK_IMPORTED_MODULE_1__utils_date__","innerText","tid","getDateAttribute","setTimerId","timerId","ATTR_TIMEAGO_TID","getTimerId","TooltipDirective","tooltipElement","innerHTML","firstChild","onMouseLeave","HostListener","TrimmedTextComponent","expanded","maxChars","onClick","animations_2","base_plug_1","PLUG_NAME","getPlugState","lastPromptId","convertedHtml","lastPromptHtml","focusSelf","default","setResponse","hasTextInput","hasImage","sendResponse","promptId","respond","animations","BasePlug","util_2","plugExists","Headers","Content-Type","RequestOptions","plugUrl","plugName","payload","mro","dashboard_service_1","station_list_component_1","attachments_component_1","history_component_1","logs_component_1","phase_list_component_1","phase_component_1","station_component_1","station_service_1","test_summary_component_1","StationListComponent","AttachmentsComponent","HistoryComponent","LogsComponent","PhaseComponent","PhaseListComponent","StationComponent","TestSummaryComponent","StationSelectedEvent","dashboard","onSelectStation","EventEmitter","retryCountdown","observable","currentMillis","remainingMs","isSubscribing","isReachable","manualRetry","manualReload","Output","linkForAttachment","attachment","attachmentIsImage","toggleExpanded","TestSelectedEvent","onSelectTest","collapsedNumTests","historyFromDiskEnabled","isLoading","lastClickedItem","loadHistory","isSelected","selectedTest","selectTest","stack","showMeasurements","toggleMeasurements","expand","StationDeselectedEvent","stationService","onDeselectStation","goBack","progress_bar_component_1","progressBar","completedPhases","completedPhaseCount","ViewChild","elapsed_time_pipe_1","focus_directive_1","genealogy_node_component_1","log_level_to_class_pipe_1","object_to_sorted_values_pipe_1","status_pipes_1","time_ago_pipe_1","tooltip_directive_1","trimmed_text_component_1","UPDATE_INTERVAL_MS","interval","publish","connect","critical","SockJS","getLocale","Locales","func"],"mappings":"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","file":"js/app.1d44c99c81eea2c25cd4.js","sourcesContent":["/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Makes requests for past test run history.\n */\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ConfigService } from '../../core/config.service';\nimport { FlashMessageService } from '../../core/flash-message.service';\nimport { Station } from '../../shared/models/station.model';\nimport { TestState } from '../../shared/models/test-state.model';\nimport { getStationBaseUrl, messageFromHttpClientErrorResponse, sortByProperty } from '../../shared/util';\n\nimport { HistoryItem, HistoryItemStatus } from './history-item.model';\nimport { RawTestState, makeTest } from './station-data';\n\nexport interface TestStateCache { [historyItemId: string]: TestState; }\n\ninterface RawHistoryItemList {\n  data: RawHistoryItem[];\n}\n\ninterface RawHistoryItem {\n  dut_id: string;\n  file_name: string;\n  start_time_millis: number;\n}\n\n@Injectable()\nexport class HistoryService {\n  private readonly cache: {[stationHostPort: string]: TestStateCache} = {};\n  private readonly history: {[stationHostPort: string]: HistoryItem[]} = {};\n\n  constructor(\n      private config: ConfigService, private http: HttpClient,\n      private flashMessage: FlashMessageService) {}\n\n  getCache(station: Station) {\n    if (!(station.hostPort in this.cache)) {\n      this.cache[station.hostPort] = {};\n    }\n    return this.cache[station.hostPort];\n  }\n\n  getHistory(station: Station) {\n    if (!(station.hostPort in this.history)) {\n      this.history[station.hostPort] = [];\n    }\n    return this.history[station.hostPort];\n  }\n\n  loadItem(station: Station, historyItem: HistoryItem): Promise<TestState> {\n    if (historyItem.status === HistoryItemStatus.loading ||\n        historyItem.status === HistoryItemStatus.loaded) {\n      throw new Error(\n          'Cannot load a history item that is loading or has loaded.');\n    }\n\n    const baseUrl = getStationBaseUrl(this.config.dashboardEnabled, station);\n    const url = `${baseUrl}/history/${historyItem.fileName}`;\n    historyItem.status = HistoryItemStatus.loading;\n\n    return this.http.get<RawTestState>(url)\n        .toPromise()\n        .then(rawTestState => {\n          const fileName = historyItem.fileName;\n          const testState = makeTest(rawTestState, null, fileName, station);\n          this.getCache(station)[historyItem.uniqueId] = testState;\n          historyItem.status = HistoryItemStatus.loaded;\n          historyItem.testState = testState;\n          return testState;\n        })\n        .catch(error => {\n          historyItem.status = HistoryItemStatus.error;\n          return Promise.reject(error);\n        });\n  }\n\n  // We prepend new items under the assumption that the startTimeMillis of the\n  // new item is greater than every item in the history.\n  prependItemFromTestState(station: Station, testState: TestState) {\n    const historyItem = new HistoryItem({\n      drawAttention: true,\n      dutId: testState.dutId,\n      fileName: null,\n      startTimeMillis: testState.startTimeMillis,\n      status: HistoryItemStatus.loaded,\n      testState,\n    });\n    this.getCache(station)[historyItem.uniqueId] = testState;\n    // Note: In your typical Javascript implementation this will take O(n) time.\n    // It seems this may start to be an issue if we have ~50,000 history items.\n    this.getHistory(station).unshift(historyItem);\n  }\n\n  refreshList(station: Station): Promise<undefined> {\n    const baseUrl = getStationBaseUrl(this.config.dashboardEnabled, station);\n    const url = `${baseUrl}/history`;\n\n    return this.http.get<RawHistoryItemList>(url)\n               .toPromise()\n               .then(response => {\n                 const rawHistoryItems = response.data;\n                 this.getHistory(station).length = 0;\n                 const stationHistory = rawHistoryItems.map(rawItem => {\n                   const historyItem = new HistoryItem({\n                     drawAttention: false,\n                     dutId: rawItem.dut_id,\n                     fileName: rawItem.file_name,\n                     startTimeMillis: rawItem.start_time_millis,\n                     status: HistoryItemStatus.unloaded,\n                     testState: null,\n                   });\n                   if (historyItem.uniqueId in this.getCache(station)) {\n                     const testState =\n                         this.getCache(station)[historyItem.uniqueId];\n                     historyItem.status = HistoryItemStatus.loaded,\n                     historyItem.testState = testState;\n                   }\n                   return historyItem;\n                 });\n                 sortByProperty(stationHistory, 'startTimeMillis', true);\n                 this.history[station.hostPort].push(...stationHistory);\n               })\n               .catch((error: HttpErrorResponse) => {\n                 if (error.status === 404) {\n                   console.info('History from disk appears to be disabled.');\n                 } else {\n                   const tooltip = messageFromHttpClientErrorResponse(error);\n                   this.flashMessage.error(\n                       'HTTP request for history failed.', tooltip);\n                 }\n                 return Promise.reject(error);\n               }) as any;\n  }\n\n  // The filename of a history item is unknown if the history item was created\n  // from via prependItemFromTestState. To open attachments on that test, the\n  // filename must be retrieved after the test record is written to disk.\n  retrieveFileName(station: Station, historyItem: HistoryItem) {\n    if (historyItem.status !== HistoryItemStatus.loaded) {\n      throw new Error(\n          'Cannot retrieve file name for a history item that is not loaded.');\n    }\n\n    const baseUrl = getStationBaseUrl(this.config.dashboardEnabled, station);\n    const url =\n        (`${baseUrl}/history?dutId=${historyItem.dutId}` +\n         `&startTimeMillis=${historyItem.startTimeMillis}`);\n\n    return this.http.get<RawHistoryItemList>(url).toPromise().then(response => {\n      const rawHistoryItems = response.data;\n      if (rawHistoryItems.length === 0) {\n        return Promise.reject(new Error('Server returned no history items.'));\n      } else if (rawHistoryItems.length > 1) {\n        return Promise.reject(\n            new Error('Server returned more than one history item.'));\n      }\n      const rawHistoryItem = rawHistoryItems[0];\n\n      historyItem.fileName = rawHistoryItem.file_name;\n      historyItem.testState.fileName = rawHistoryItem.file_name;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/history.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The state of a test on a station.\n */\n\nimport { Attachment } from './attachment.model';\nimport { LogRecord } from './log-record.model';\nimport { Phase } from './phase.model';\nimport { Station } from './station.model';\n\n// Enum values must not overlap between any of the status enums.\n// See status-pipes.ts.\nexport enum TestStatus {\n  waiting = 11,  // Corresponds to WAITING_FOR_TEST_START.\n  running,\n  pass,\n  fail,\n  error,\n  timeout,\n  aborted,\n}\n\nexport class PlugDescriptor { mro: string[]; }\n\nexport class TestState {\n  attachments: Attachment[];\n  dutId: string;\n  endTimeMillis: number|null;\n  fileName: string|null;  // This is null for tests *not* from the history.\n  name: string;\n  logs: LogRecord[];\n  phases: Phase[];\n  plugDescriptors: {[name: string]: PlugDescriptor};\n  plugStates: {[name: string]: {}};\n  startTimeMillis: number;\n  station: Station;\n  status: TestStatus;\n  // This is the execution UID. It is null for tests retrieved from the history.\n  testId: string|null;\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: TestState) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/test-state.model.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, InjectionToken, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    tslib_1.__extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    tslib_1.__extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    tslib_1.__extends(HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.call(of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                else if (!ok && req.responseType === 'json' && typeof body === 'string') {\n                    try {\n                        // Attempt to parse the body as JSON.\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Cannot be certain that the body was meant to be parsed as JSON.\n                        // Leave the body as a string.\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new Optional(), new Inject(HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, interceptingHandler as ɵinterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor, NoopInterceptor as ɵa, JsonpCallbackContext as ɵb, jsonpCallbackContext as ɵc, BrowserXhr as ɵd, HttpXsrfCookieExtractor as ɵg, HttpXsrfInterceptor as ɵh, XSRF_COOKIE_NAME as ɵe, XSRF_HEADER_NAME as ɵf };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/common/@angular/common/http.es5.js\n// module id = 234\n// module chunks = 1","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Directive, ElementRef, EventEmitter, Host, Inject, Injectable, InjectionToken, Injector, Input, NgModule, Optional, Output, Renderer2, Self, SkipSelf, Version, forwardRef, ɵisObservable, ɵisPromise, ɵlooseIdentical } from '@angular/core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operator/map';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    /**\n     * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n     * that backs this directive. Most properties fall through to that\n     * instance.\n     * @abstract\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.control = function () { };\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () {\n            return this.control ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * Returns an array that represents the path from the top-level form\n         * to this control. Each index is the string name of the control on\n         * that level.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * For more information, see {\\@link AbstractControl}.\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar ControlContainer = (function (_super) {\n    tslib_1.__extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * \\@stable\n */\nvar NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a value greater than a number.\n     * @param {?} min\n     * @return {?}\n     */\n    Validators.min = function (min) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value less than a number.\n     * @param {?} max\n     * @return {?}\n     */\n    Validators.max = function (max) {\n        return function (control) {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return map.call(forkJoin(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = ɵisPromise(r) ? fromPromise(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    tslib_1.__extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: RadioControlRegistry, },\n    { type: Injector, },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: Input },],\n    'formControlName': [{ type: Input },],\n    'value': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = _this._getOptionValue(valueString);\n            fn(_this.value);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? ((this._optionMap.get(id)))._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: Renderer2, },\n    { type: ElementRef, },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: Input },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: Input, args: ['ngValue',] },],\n    'value': [{ type: Input, args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return ((parent.path)).concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value); /** @type {?} */\n    ((\n    // view -> model\n    dir.valueAccessor)).registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    }); /** @type {?} */\n    ((\n    // touched\n    dir.valueAccessor)).registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { /** @type {?} */ ((((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((((validator)).registerOnValidatorChange))(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    ((dir.valueAccessor)).registerOnChange(function () { return _noControlError(dir); }); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (((dir.path)).length > 1) {\n        messageEnd = \"path: '\" + ((dir.path)).join(' -> ') + \"'\";\n    }\n    else if (((dir.path))[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor = undefined;\n    var /** @type {?} */ builtinAccessor = undefined;\n    var /** @type {?} */ customAccessor = undefined;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    tslib_1.__extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    tslib_1.__extends(NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: Self },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    tslib_1.__extends(NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Self },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = PENDING;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(!!opts.onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (opts) {\n        if (opts === void 0) { opts = { emitEvent: true }; }\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity(opts); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, opts) {\n        if (opts === void 0) { opts = {}; }\n        this._errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns error data if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) { return !!this.getError(errorCode, path); };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new EventEmitter();\n        this._statusChanges = new EventEmitter();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    tslib_1.__extends(FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._value = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, options.emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, options) {\n        if (formState === void 0) { formState = null; }\n        if (options === void 0) { options = {}; }\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this._value, options);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    tslib_1.__extends(FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl#get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, options) {\n        if (value === void 0) { value = {}; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    tslib_1.__extends(FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        var _this = _super.call(this, validator || null, asyncValidator || null) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, options) {\n        if (value === void 0) { value = []; }\n        if (options === void 0) { options = {}; }\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * If you want to import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    tslib_1.__extends(NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new EventEmitter();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    tslib_1.__extends(NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: Input, args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    tslib_1.__extends(NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || !!(this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: Input },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'options': [{ type: Input, args: ['ngModelOptions',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    tslib_1.__extends(FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new EventEmitter();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n                ((((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formControl',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    tslib_1.__extends(FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = ((null));\n        _this.ngSubmit = new EventEmitter();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: Input, args: ['formGroup',] },],\n    'ngSubmit': [{ type: Output },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    tslib_1.__extends(FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: Input, args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    tslib_1.__extends(FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return ((this.formDirective)).getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: Input, args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    tslib_1.__extends(FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new EventEmitter();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, /** @type {?} */ ((this._parent))); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((composeAsyncValidators(this._rawAsyncValidators)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && ((this.valueAccessor)).setDisabledState) {\n            ((((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: Input, args: ['formControlName',] },],\n    'model': [{ type: Input, args: ['ngModel',] },],\n    'update': [{ type: Output, args: ['ngModelChange',] },],\n    'isDisabled': [{ type: Input, args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: Input },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    tslib_1.__extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: Input },],\n};\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: Input },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: Input },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.4.6');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule, InternalFormsSharedModule as ɵba, REACTIVE_DRIVEN_DIRECTIVES as ɵz, SHARED_FORM_DIRECTIVES as ɵx, TEMPLATE_DRIVEN_DIRECTIVES as ɵy, CHECKBOX_VALUE_ACCESSOR as ɵa, DEFAULT_VALUE_ACCESSOR as ɵb, AbstractControlStatus as ɵc, ngControlStatusHost as ɵd, formDirectiveProvider as ɵe, formControlBinding as ɵf, modelGroupProvider as ɵg, NgNoValidate as ɵbf, NUMBER_VALUE_ACCESSOR as ɵbb, NumberValueAccessor as ɵbc, RADIO_VALUE_ACCESSOR as ɵh, RadioControlRegistry as ɵi, RANGE_VALUE_ACCESSOR as ɵbd, RangeValueAccessor as ɵbe, formControlBinding$1 as ɵj, controlNameBinding as ɵk, formDirectiveProvider$1 as ɵl, formArrayNameProvider as ɵn, formGroupNameProvider as ɵm, SELECT_VALUE_ACCESSOR as ɵo, NgSelectMultipleOption as ɵq, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵp, CHECKBOX_REQUIRED_VALIDATOR as ɵs, EMAIL_VALIDATOR as ɵt, MAX_LENGTH_VALIDATOR as ɵv, MIN_LENGTH_VALIDATOR as ɵu, PATTERN_VALIDATOR as ɵw, REQUIRED_VALIDATOR as ɵr };\n//# sourceMappingURL=forms.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/forms/@angular/forms.es5.js\n// module id = 235\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A message flashed on the screen for a set amount of time.\n */\n\nlet messageCount = 0;  // Used to create unique message IDs.\n\nexport enum FlashMessageType {\n  error,\n  warn,\n}\n\nexport class FlashMessage {\n  hasTooltip: boolean;\n  id: number;\n  isDismissed: boolean;  // Message should begin exit animation.\n  showTooltip: boolean;\n\n  constructor(\n      public content: string, public tooltip: string|null,\n      public type: FlashMessageType) {\n    this.id = messageCount++;\n    this.isDismissed = false;\n    this.hasTooltip = Boolean(tooltip);\n    this.showTooltip = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/core/flash-message.model.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Feature module for plugs.\n *\n * See https://angular.io/docs/ts/latest/guide/ngmodule.html for more info\n * about modules in Angular.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { UserInputPlugComponent } from './user-input-plug.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    SharedModule,\n  ],\n  declarations: [\n    UserInputPlugComponent,\n  ],\n  providers: [],\n  exports: [\n    CommonModule,\n    HttpModule,\n    UserInputPlugComponent,\n  ],\n})\nexport class PlugsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/plugs/plugs.module.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A progress bar.\n */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'htf-progress-bar',\n  template: require('./progress-bar.component.html'),\n  styles: [require('./progress-bar.component.scss')],\n})\nexport class ProgressBarComponent {\n  @Input() value: number;\n\n  private isReset = false;\n\n  get barStyle() {\n    if (this.isReset) {\n      this.isReset = false;\n      return {\n        'width': '0',\n        'transition': 'none',\n      };\n    }\n    const limitedValue = Math.max(0, Math.min(1, this.value));\n    const percent = limitedValue * 100;\n    return {\n      'width': `${percent}%`,\n    };\n  }\n\n  get isComplete() {\n    return this.value >= 1;\n  }\n\n  // Can be triggered by a parent component to animate the progress from zero.\n  reset() {\n    this.isReset = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/progress-bar.component.ts","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/utils/date.js\n// module id = 239\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { animate, state, style, transition } from '@angular/animations';\n\nexport const washIn = [\n  state('in', style({\n          'background': 'rgba(0, 119, 255, 0.0)',\n        })),\n  transition(\n      'void => in',\n      [\n        style({\n          'background': 'rgba(0, 119, 255, 0.1)',\n        }),\n        animate(1000),\n      ]),\n];\n\nexport function washAndExpandIn(maxHeight) {\n  return [\n    state('in', style({\n            'background': 'rgba(0, 119, 255, 0.0)',\n            'max-height': `${maxHeight}px`,\n          })),\n    transition(\n        'void => in',\n        [\n          style({\n            'background': 'rgba(0, 119, 255, 0.2)',\n            'max-height': '0',\n          }),\n          animate(500),\n        ]),\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/animations.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Maintains info about any known stations.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { Station, StationStatus } from '../../shared/models/station.model';\nimport { SockJsMessage, SockJsService } from '../../shared/sock-js.service';\nimport { Subscription } from '../../shared/subscription';\nimport { devHost, urlHost } from '../../shared/util';\n\nconst dashboardUrl = `${devHost}/sub/dashboard`;\n\nconst dashboardStatusMap = {\n  'UNREACHABLE': StationStatus.unreachable,\n  'ONLINE': StationStatus.online,\n};\n\n/**\n * Raw response types.\n */\ninterface RawStation {\n  cell: string|null;\n  host: string;\n  port: string;\n  station_id: string;\n  status: string;\n  test_description: string|null;\n  test_name: string|null;\n}\n\ninterface DashboardApiResponse {\n  [hostPort: string]: RawStation;\n}\n\n/**\n * Parsed response type.\n */\nexport interface StationMap { [hostPort: string]: Station; }\n\n/**\n * Singleton service used to communicate with the dashboard pub-sub API.\n */\n@Injectable()\nexport class DashboardService extends Subscription {\n  readonly stations: StationMap = {};\n\n  constructor(sockJsService: SockJsService) {\n    super(sockJsService);\n    this.messages.subscribe((message: SockJsMessage) => {\n      const response = DashboardService.validateResponse(message.data);\n      const newStations = DashboardService.parseResponse(response);\n      this.applyResponse(newStations);\n    });\n  }\n\n  subscribe(\n      retryMs: number|null = null, retryBackoff = 1.0,\n      retryMax = Number.MAX_VALUE) {\n    super.subscribeToUrl(dashboardUrl, retryMs, retryBackoff, retryMax);\n  }\n\n  /**\n   * Step 1: Validate that a JSON response matches the expected format.\n   */\n  private static validateResponse(response: {}) {\n    // TODO(kenadia): Do validation.\n    return response as DashboardApiResponse;\n  }\n\n  /**\n   * Step 2: Transform a response object into a map of station objects.\n   *\n   * See StationService.ensureTestList for more information about the decision\n   * to separate the API format from the structure of the models used in the\n   * frontend.\n   */\n  private static parseResponse(response: DashboardApiResponse) {\n    const newStations: StationMap = {};\n\n    for (const hostPort of Object.keys(response)) {\n      const rawStation = response[hostPort];\n      newStations[hostPort] = new Station({\n        cell: rawStation.cell,\n        host: rawStation.host,\n        hostPort,\n        label: DashboardService.getStationLabel(rawStation),\n        port: rawStation.port,\n        stationId: rawStation.station_id,\n        status: dashboardStatusMap[rawStation.status],\n        testDescription: rawStation.test_description,\n        testName: rawStation.test_name,\n      });\n    }\n\n    return newStations;\n  }\n\n  /**\n   * Step 3: Update our data store with new station information.\n   */\n  private applyResponse(newStations: StationMap) {\n    for (const hostPort of Object.keys(newStations)) {\n      const newStation = newStations[hostPort];\n      if (hostPort in this.stations) {\n        // If a test is not currently running on the station, preserve the\n        // information from the seen test.\n        if (newStation.cell === null && newStation.testDescription === null &&\n            newStation.testName === null) {\n          newStation.cell = this.stations[hostPort].cell;\n          newStation.label = this.stations[hostPort].label;\n          newStation.testDescription = this.stations[hostPort].testDescription;\n          newStation.testName = this.stations[hostPort].testName;\n        }\n        Object.assign(this.stations[hostPort], newStation);\n      } else {\n        this.stations[hostPort] = newStation;\n      }\n    }\n\n    // Remove stations no longer reported by the server.\n    for (const hostPort of Object.keys(this.stations)) {\n      if (!(hostPort in newStations)) {\n        delete this.stations[hostPort];\n      }\n    }\n  }\n\n  private static getStationLabel(rawStation: RawStation) {\n    if (rawStation.cell) {\n      return rawStation.cell;\n    }\n    if (rawStation.test_name) {\n      if (urlHost === rawStation.host || urlHost === rawStation.station_id) {\n        return rawStation.test_name;\n      }\n      return `${rawStation.test_name} on ${rawStation.station_id}`;\n    }\n    return rawStation.station_id;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station-list/dashboard.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Handles a connection to a websocket-like interface.\n *\n * A Subscription can be reused for multiple websocket connections. It can also\n * be configured to reconnect automatically. This makes Subscription useful as a\n * base class for our websocket-based services. However, it means that\n * Subscription must maintain a non-trivial amount of state information.\n */\n\nenum SubscriptionState {\n  unsubscribed,\n  subscribing,\n  subscribed,\n  failed,   // Failed and not waiting to retry.\n  waiting,  // Failed and waiting to retry.\n}\n\nimport { Subject } from 'rxjs/Subject';\n\nimport { SockJsMessage, SockJsObject, SockJsService } from './sock-js.service';\n\nexport class Subscription {\n  readonly messages = new Subject();\n  retryTimeMs: number|null = null;  // Available when state is `waiting`.\n\n  private currentRetryMs: number|null = null;  // retryMs with backoff.\n  private retryTimeoutId: NodeJS.Timer|number|null = null;  // Timer from setTimeout().\n  private sock: SockJsObject|null = null;\n  private state = SubscriptionState.unsubscribed;\n\n  // Params used by subscribeWithSavedParams().\n  private url: string|null = null;\n  private retryMs: number|null = null;\n  private retryBackoff: number|null = null;\n  private retryMax: number|null = null;\n\n  constructor(private sockJsService: SockJsService) {}\n\n  get hasError() {\n    return (\n        this.state === SubscriptionState.failed ||\n        this.state === SubscriptionState.waiting);\n  }\n\n  get isSubscribing() {\n    return this.state === SubscriptionState.subscribing;\n  }\n\n  refresh() {\n    if (this.state === SubscriptionState.unsubscribed) {\n      throw new Error('Cannot refresh subscription from state `unsubscribed`.');\n    } else if (this.state === SubscriptionState.subscribing) {\n      return;\n    }\n    this.unsubscribe();\n    this.subscribeWithSavedParams();\n  }\n\n  retryNow() {\n    if (this.state !== SubscriptionState.waiting) {\n      throw new Error('Subscription cannot retryNow when state != `waiting`.');\n    }\n    this.cancelTimeout();\n    this.subscribeWithSavedParams();\n  }\n\n  subscribeToUrl(\n      url: string, retryMs: number|null = null, retryBackoff = 1.0,\n      retryMax = Number.MAX_VALUE) {\n    if (this.sock !== null) {\n      this.unsubscribe();\n    }\n    this.url = url;\n    this.retryMs = retryMs;\n    this.retryBackoff = retryBackoff;\n    this.retryMax = retryMax;\n    this.subscribeWithSavedParams();\n  }\n\n  unsubscribe() {\n    if (this.sock === null) {\n      return;\n    }\n    console.debug(`Unsubscribing from ${this.url}.`);\n    this.cancelTimeout();\n    this.sock.close();  // Note: This does not trigger this.sock.onclose().\n    this.currentRetryMs = null;\n    this.state = SubscriptionState.unsubscribed;\n  }\n\n  private cancelTimeout() {\n    if (this.retryTimeoutId !== null) {\n      clearTimeout(this.retryTimeoutId as NodeJS.Timer);\n      this.retryTimeoutId = null;\n    }\n  }\n\n  private subscribeWithSavedParams() {\n    console.debug(`Attempting to subscribe to ${this.url}.`);\n    const sock = new this.sockJsService.sockJs(this.url);\n    sock.onopen = () => {\n      if (this.sock !== sock) {\n        return;\n      }\n      console.debug(`Subscribed to ${this.url}.`);\n      this.currentRetryMs = null;\n      this.state = SubscriptionState.subscribed;\n    };\n    // Called if the initial attempt to connect fails, or, after subscribing,\n    // if we detect that the other end of the socket has closed.\n    sock.onclose = () => {\n      if (this.sock !== sock) {\n        return;\n      }\n      if (this.state === SubscriptionState.subscribed) {\n        console.debug(`Subscription to ${this.url} lost.`);\n      } else {\n        console.debug(`Subscription to ${this.url} failed.`);\n      }\n\n      if (this.retryMs === null) {\n        this.state = SubscriptionState.failed;\n      } else {\n        this.state = SubscriptionState.waiting;\n        if (this.currentRetryMs === null) {\n          this.currentRetryMs = this.retryMs;\n        } else {\n          this.currentRetryMs *= this.retryBackoff;\n        }\n        this.currentRetryMs = Math.max(this.currentRetryMs, this.retryMax);\n        this.retryTimeMs = Date.now() + this.currentRetryMs;\n        this.retryTimeoutId = setTimeout(() => {\n          this.subscribeWithSavedParams();\n        }, this.currentRetryMs);\n      }\n    };\n    sock.onmessage = (message: SockJsMessage) => {\n      if (this.sock !== sock) {\n        return;\n      }\n      this.messages.next(message);\n    };\n    this.sock = sock;\n    this.state = SubscriptionState.subscribing;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/subscription.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Summary information about a test run available in the history.\n */\n\nimport { TestState } from '../../shared/models/test-state.model';\n\nexport enum HistoryItemStatus {\n  unloaded,\n  loading,\n  loaded,\n  error,\n}\n\nexport interface HistoryItemParams {\n  dutId: string|null;\n  fileName: string|null;\n  drawAttention: boolean;\n  startTimeMillis: number|null;\n  status: HistoryItemStatus;\n  testState: TestState|null;\n}\n\nexport class HistoryItem {\n  dutId: string|null;\n  fileName: string|null;\n  drawAttention: boolean;  // Whether to draw attention to a new history item.\n  startTimeMillis: number|null;\n  status: HistoryItemStatus;\n  testState: TestState|null;  // Null if status is not `loaded`.\n\n  constructor(params: HistoryItemParams) {\n    Object.assign(this, params);\n  }\n\n  // Get an ID that we can trust to be unique for all history items from a\n  // given station.\n  get uniqueId(): string {\n    if (this.dutId === null && this.startTimeMillis === null) {\n      if (this.fileName === null) {\n        throw new Error(\n            'History item must have file name, or DUT ID and start time.');\n      }\n      return this.fileName;\n    }\n    return `${this.dutId}\\$${this.startTimeMillis}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/history-item.model.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Functions for processing data from the station API.\n */\n\nimport { Attachment } from '../../shared/models/attachment.model';\nimport { LogRecord } from '../../shared/models/log-record.model';\nimport { Measurement, MeasurementStatus } from '../../shared/models/measurement.model';\nimport { Phase, PhaseStatus } from '../../shared/models/phase.model';\nimport { Station } from '../../shared/models/station.model';\nimport { PlugDescriptor, TestState, TestStatus } from '../../shared/models/test-state.model';\n\nimport { sortByProperty } from '../../shared/util';\n\nconst testStateStatusCompleted = 'COMPLETED';\n\nconst testStateStatusMap = {\n  'WAITING_FOR_TEST_START': TestStatus.waiting,\n  'RUNNING': TestStatus.running,\n};\n\nconst testRecordOutcomeMap = {\n  'PASS': TestStatus.pass,\n  'FAIL': TestStatus.fail,\n  'ERROR': TestStatus.error,\n  'TIMEOUT': TestStatus.timeout,\n  'ABORTED': TestStatus.aborted,\n};\n\nconst measurementStatusMap = {\n  'PASS': MeasurementStatus.pass,\n  'FAIL': MeasurementStatus.fail,\n  'UNSET': MeasurementStatus.unset,\n  'PARTIALLY_SET': MeasurementStatus.unset,\n};\n\nconst phaseRecordOutcomeMap = {\n  'PASS': PhaseStatus.pass,\n  'FAIL': PhaseStatus.fail,\n  'SKIP': PhaseStatus.skip,\n  'ERROR': PhaseStatus.error,\n};\n\nexport interface RawTestState {\n  plugs: RawPlugsInfo;\n  running_phase_state: RawPhase|null;\n  status: string;\n  test_record: RawTestRecord;\n}\n\nexport interface RawPlugsInfo {\n  plug_descriptors: {[name: string]: PlugDescriptor};\n  plug_states: {[name: string]: {}};\n}\n\nexport interface RawTestRecord {\n  code_info: {};\n  dut_id: string;\n  end_time_millis?: number;\n  log_records: RawLogRecord[];\n  metadata: RawMetadata;\n  outcome: string;\n  outcome_details: Array<{}>;\n  phases: RawPhase[];\n  start_time_millis: number;\n  station_id: string;\n}\n\nexport interface RawLogRecord {\n  level: number;\n  lineno: number;\n  logger_name: string;\n  message: string;\n  source: string;\n  timestamp_millis: number;\n}\n\nexport interface RawMetadata { test_name: string; }\n\nexport interface RawPhase {\n  attachments: {[name: string]: RawAttachment};\n  codeinfo: {};\n  descriptor_id: number;\n  end_time_millis?: number;\n  measurements: {[name: string]: RawMeasurement};\n  name: string;\n  result?: {};  // Not present on running phase state.\n  start_time_millis: number;\n  outcome: string;\n}\n\nexport interface RawAttachment {\n  mimetype: string;\n  sha1: string;\n}\n\nexport interface RawMeasurement {\n  name: string;\n  validators?: {};      // Not present on running phase or phase descriptor.\n  measured_value?: {};  // Not present on running phase or phase descriptor.\n  outcome: string;\n}\n\nexport interface RawPhaseDescriptor {\n  id: number;\n  name: string;\n  measurements: RawMeasurement[];\n}\n\nexport function makeTest(\n    rawState: RawTestState, testId: string|null, fileName: string|null,\n    station: Station) {\n  if ((testId === null && fileName === null) ||\n      (testId !== null && fileName !== null)) {\n    throw new Error('Exactly one of `testId` and `fileName` must be null.');\n  }\n\n  // Process the logs.\n  const logRecords = rawState.test_record.log_records.filter(log => {\n    return log.logger_name !== 'openhtf.output.web_gui';\n  });\n  logRecords.reverse();  // Sort the logs from most to least recent.\n  const logs = logRecords.map(makeLog);\n\n  // Process the phases.\n  const phases = rawState.test_record.phases.map(phase => {\n    return makePhase(phase, false);\n  });\n  if (rawState.running_phase_state !== null) {\n    phases.push(makePhase(rawState.running_phase_state, true));\n  }\n\n  // TODO(kenadia): Make the guarantee that a test state is immutable. Then\n  // we should no longer need to preprocess this here or add the attachments\n  // directly to the test state.\n  //\n  // Flatten the lists of attachments.\n  const attachments = phases.reduce((accumulator, phase) => {\n    return accumulator.concat(phase.attachments);\n  }, []);\n\n  // Process the test status.\n  let status;\n  if (rawState.status === testStateStatusCompleted) {\n    status = testRecordOutcomeMap[rawState.test_record.outcome];\n  } else {\n    status = testStateStatusMap[rawState.status];\n  }\n\n  return new TestState({\n    attachments,\n    dutId: rawState.test_record.dut_id,\n    endTimeMillis: rawState.test_record.end_time_millis || null,\n    fileName,\n    logs,\n    name: rawState.test_record.metadata.test_name,\n    phases,\n    plugDescriptors: rawState.plugs.plug_descriptors,\n    plugStates: rawState.plugs.plug_states,\n    startTimeMillis: rawState.test_record.start_time_millis,\n    station,\n    status,\n    testId,\n  });\n}\n\nfunction makePhase(phase: RawPhase, running: boolean) {\n  // Legacy support: phase.attachments in a test record may be undefined.\n  let attachments = [];\n  if (phase.attachments) {\n    attachments = Object.keys(phase.attachments).map(name => {\n      const rawAttachment = phase.attachments[name];\n      return new Attachment({\n        mimeType: rawAttachment.mimetype,\n        name,\n        phaseDescriptorId: phase.descriptor_id,\n        phaseName: phase.name,\n        sha1: rawAttachment.sha1,\n      });\n    });\n  }\n  // Sort attachments alphabetically by name.\n  sortByProperty(attachments, 'name');\n\n  // TODO(kenadia):\n  // Observed a bug where phase.measurements is sometimes null or undefined.\n  // Figure out why that happens.\n  let measurements: Measurement[];\n  if (phase.measurements) {\n    measurements = Object.keys(phase.measurements).map(key => {\n      const rawMeasuredValue = phase.measurements[key].measured_value;\n      let measuredValue = null;\n      if (typeof rawMeasuredValue !== 'undefined') {\n        measuredValue = `${rawMeasuredValue}`;\n      }\n      return new Measurement({\n        name: phase.measurements[key].name,\n        validators: phase.measurements[key].validators || null,\n        measuredValue,\n        status: measurementStatusMap[phase.measurements[key].outcome],\n      });\n    });\n    // Sort measurements alphabetically by name.\n    sortByProperty(measurements, 'name');\n  } else {\n    measurements = [];\n  }\n\n  let status: PhaseStatus;\n  if (running) {\n    status = PhaseStatus.running;\n  } else {\n    status = phaseRecordOutcomeMap[phase.outcome];\n  }\n  return new Phase({\n    attachments,\n    descriptorId: phase.descriptor_id,\n    endTimeMillis: phase.end_time_millis || null,\n    name: phase.name,\n    startTimeMillis: phase.start_time_millis,\n    status,\n    measurements,\n  });\n}\n\nexport function makePhaseFromDescriptor(descriptor: RawPhaseDescriptor) {\n  return new Phase({\n    attachments: [],\n    descriptorId: descriptor.id,\n    endTimeMillis: null,\n    name: descriptor.name,\n    startTimeMillis: null,\n    status: PhaseStatus.waiting,\n    measurements: descriptor.measurements.map(measurement => {\n      return new Measurement({\n        name: measurement.name,\n        validators: null,\n        measuredValue: null,\n        status: measurementStatusMap[measurement.outcome],\n      });\n    }),\n  });\n}\n\nfunction makeLog(log: RawLogRecord) {\n  return new LogRecord({\n    level: log.level,\n    lineNumber: log.lineno,\n    loggerName: log.logger_name,\n    message: log.message,\n    source: log.source,\n    timestampMillis: log.timestamp_millis,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/station-data.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Maintains info about tests on each station.\n */\n\nimport 'rxjs/add/observable/fromPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/mergeMap';\n\nimport { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ConfigService } from '../../core/config.service';\nimport { FlashMessageService } from '../../core/flash-message.service';\nimport { Phase } from '../../shared/models/phase.model';\nimport { Station } from '../../shared/models/station.model';\nimport { TestState, TestStatus } from '../../shared/models/test-state.model';\nimport { SockJsMessage, SockJsService } from '../../shared/sock-js.service';\nimport { Subscription } from '../../shared/subscription';\nimport { getStationBaseUrl, getTestBaseUrl, messageFromErrorResponse } from '../../shared/util';\n\nimport { HistoryService } from './history.service';\nimport { makePhaseFromDescriptor, makeTest, RawTestState } from './station-data';\n\ninterface StationApiResponse {\n  test_uid?: string;     // Present on messages of type 'update'.\n  state?: RawTestState;  // Present on messages of type 'update'.\n  type: 'update'|'record';\n}\n\n/**\n * Singleton service used to communicate with the station pub-sub API.\n *\n * The service may subscribe to the updates of up to one station at a time.\n */\n@Injectable()\nexport class StationService extends Subscription {\n  private readonly phaseDescriptorPromise:\n      {[testId: string]: Promise<Phase[]>} = {};\n  private readonly testsById: {[testId: string]: TestState} = {};\n  private readonly testsByStation: {[stationHostPort: string]: TestState} = {};\n  private messagesSubscription = null;\n\n  constructor(\n      private config: ConfigService, private flashMessage: FlashMessageService,\n      private historyService: HistoryService, private http: Http,\n      sockJsService: SockJsService) {\n    super(sockJsService);\n  }\n\n  subscribe(\n      station: Station, retryMs: number|null = null, retryBackoff = 1.0,\n      retryMax = Number.MAX_VALUE) {\n    if (this.messagesSubscription !== null) {\n      this.messagesSubscription.unsubscribe();\n    }\n    this.messagesSubscription =\n        this.messages\n            // Use mergeMap since this.applyPhaseDescriptors returns Observable.\n            .mergeMap((message: SockJsMessage) => {\n              const response = StationService.validateResponse(message.data);\n              console.debug('StationService received response:', response);\n              const test = this.parseResponse(response, station);\n              return this.applyPhaseDescriptors(test);\n            })\n            .subscribe(test => {\n              this.applyResponse(test, station);\n            });\n\n    const baseUrl = getStationBaseUrl(this.config.dashboardEnabled, station);\n    const stationUrl = `${baseUrl}/sub/station`;\n    super.subscribeToUrl(stationUrl, retryMs, retryBackoff, retryMax);\n  }\n\n  getTest(station: Station) {\n    return this.testsByStation[station.hostPort] || null;\n  }\n\n  /**\n   * Step 1: Validate that a JSON response matches the expected format.\n   */\n  private static validateResponse(response: {}) {\n    // TODO(kenadia): Do validation.\n    return response as StationApiResponse;\n  }\n\n  /**\n   * Step 2: Transform a response object into a test state object.\n   *\n   * In OpenHTF's built-in frontend, the test state is passed around frontend\n   * templates in the same structure with which it was received, so that the\n   * object's structure mimics as much as possible the structure of state\n   * objects on the backend. Displaying the state on the frontend thus requires\n   * complex templates and pipe functions.\n   *\n   * Here we adopt a different philosophy. We define distinct interfaces for the\n   * API response and the test state used by the frontend. By decoupling the two\n   * we can minimize the work done by the templates and we can handle changes to\n   * the station API without having to modify the templates.\n   */\n  private parseResponse(response: StationApiResponse, station: Station) {\n    const testState =\n        makeTest(response.state, response.test_uid, null, station);\n    if (response.type === 'record') {\n      this.historyService.prependItemFromTestState(station, testState);\n    }\n    return testState;\n  }\n\n  /**\n   * Step 3: Construct the full phase list using the phase descriptors.\n   *\n   * The test state only includes executed and executing phases, whereas the\n   * phase descriptors include all phases. We use the descriptors to extend the\n   * test state phase list with the phases which are waiting to be executed.\n   *\n   * Since this step may require another HTTP request, we return an Observable.\n   */\n  private applyPhaseDescriptors(test: TestState) {\n    return this.getOrRequestPhaseDescriptors(test)\n        .map((descriptors: Phase[]) => {\n          // Counts all phases that have started execution.\n          const numExecutedPhases = test.phases.length;\n\n          if (numExecutedPhases === 0) {\n            test.phases.push(...descriptors);\n            return test;\n          }\n\n          // Find the cutoff point in the list of phase descriptors. We do this\n          // by finding the last executed phase that can be matched to a phase\n          // descriptor. Normally this is simply the last executed phase,\n          // however, if we are currently running a teardown phase, it will not\n          // have a corresponding phase descriptor. Therefore, we iterate\n          // backwards through the list of executed phases.\n          let lastExecutedPhaseIndex = numExecutedPhases - 1;\n          let lastExecutedDescriptorIndex = -1;\n          while (lastExecutedPhaseIndex >= 0 &&\n                 lastExecutedDescriptorIndex === -1) {\n            const lastExecuted = test.phases[lastExecutedPhaseIndex];\n            for (const descriptor of descriptors) {\n              if (descriptor.descriptorId === lastExecuted.descriptorId) {\n                lastExecutedDescriptorIndex = descriptors.indexOf(descriptor);\n                // Don't break here, in case the same phase ran multiple times.\n              }\n            }\n            lastExecutedPhaseIndex--;\n          }\n\n          // If we do not recognize the descriptor ID of the executing phase,\n          // it should be the test start phase, and we can continue as normal.\n          // If it isn't, then fail in a non-horrible way.\n          if (lastExecutedDescriptorIndex === -1 && numExecutedPhases > 1) {\n            console.error(\n                'Unrecognized phase descriptor ID.', test.phases, descriptors);\n            return test;\n          }\n\n          // Insert the phase descriptors between the last executed phase and\n          // any teardown phases.\n          test.phases.splice(\n              lastExecutedPhaseIndex + 2, 0,\n              ...descriptors.slice(lastExecutedDescriptorIndex + 1));\n          return test;\n        })\n        // Degrade gracefully if we can't get the phase descriptors.\n        .catch(() => {\n          return Observable.of(test);\n        });\n  }\n\n  private getOrRequestPhaseDescriptors(test: TestState) {\n    if (!(test.testId in this.phaseDescriptorPromise)) {\n      const testBaseUrl = getTestBaseUrl(this.config.dashboardEnabled, test);\n      const url = `${testBaseUrl}/phases`;\n      this.phaseDescriptorPromise[test.testId] =\n          this.http.get(url)\n              .toPromise()\n              .then((response: Response) => {\n                const rawDescriptors = response.json().data;\n                const descriptors = rawDescriptors.map(makePhaseFromDescriptor);\n                return descriptors;\n              })\n              .catch(error => {\n                const tooltip = messageFromErrorResponse(error);\n                this.flashMessage.error(\n                    'HTTP request for phase descriptors failed.', tooltip);\n                return Promise.reject(error);\n              });\n    }\n    return Observable.fromPromise(this.phaseDescriptorPromise[test.testId]);\n  }\n\n  /**\n   * Step 4: Update our data store with new test information.\n   */\n  private applyResponse(test: TestState, station: Station) {\n    // If we have old information for this test, update it.\n    if (test.testId in this.testsById) {\n      const oldTest = this.testsById[test.testId];\n      // Alert the operator when the test exits early.\n      if (oldTest.status !== test.status) {\n        if (test.status === TestStatus.error) {\n          this.flashMessage.error(\n              'The test exited early due to an error. View the test logs for ' +\n              'details.');\n        } else if (test.status === TestStatus.timeout) {\n          this.flashMessage.warn('The test exited early due to timeout.');\n        } else if (test.status === TestStatus.aborted) {\n          this.flashMessage.warn('The test was aborted.');\n        }\n      }\n      Object.assign(oldTest, test);\n    }\n\n    // Otherwise, add the new test.\n    else {\n      this.testsById[test.testId] = test;\n      this.testsByStation[station.hostPort] = test;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/station.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Service for the global app configuration.\n */\n\nimport { Injectable } from '@angular/core';\n\ntype dashboard = 'dashboard';\ntype station = 'station';\nconst DASHBOARD_SERVER_TYPE: dashboard = 'dashboard';\n\ninterface Config {\n  server_type?: dashboard|station;\n  history_from_disk_enabled?: boolean;\n}\n\n// We will usually fall back to the default config during development.\nconst defaultConfig: Config = {\n  server_type: DASHBOARD_SERVER_TYPE,\n  history_from_disk_enabled: false,\n};\n\n@Injectable()\nexport class ConfigService {\n  private config: Config = defaultConfig;\n\n  // tslint:disable-next-line:no-any config is parsed from JSON, then validated\n  initialize(config: any) {\n    const extraKeys = Object.keys(config).filter(k => !(k in defaultConfig));\n\n    if (extraKeys.length > 0) {\n      console.warn('Received unknown config keys', extraKeys);\n      for (const key of extraKeys) {\n        delete config[key];\n      }\n    }\n\n    this.config = {};\n    Object.assign(this.config, defaultConfig);\n    Object.assign(this.config, config);\n  }\n\n  get dashboardEnabled(): boolean {\n    if (this.config === null) {\n      throw new Error('Attempted to access config before it was initialized.');\n    }\n    return this.config.server_type === DASHBOARD_SERVER_TYPE;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/core/config.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Miscellaneous shared functions.\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\n\nimport { Station } from './models/station.model';\nimport { TestState } from './models/test-state.model';\n\n// When running a development server, this should be set to point to the\n// dashboard server, e.g. `http://localhost:12000`. Otherwise, it should be\n// set to the empty string.\nexport let devHost = '';\nif (process.env.ENV !== 'build') {\n  devHost = 'http://localhost:12000';\n}\n\nexport const urlHost = window.location.host.split(':')[0];\nconst localhostAddress = '127.0.0.1';\n\nexport function getStationBaseUrl(dashboardEnabled: boolean, station: Station) {\n  if (dashboardEnabled) {\n    // When the dashboard runs in local-only mode, stations will report the\n    // localhost IP. Use the urlHost IP so that it works from other computers.\n    if (station.host === localhostAddress) {\n      return `http://${urlHost}:${station.port}`;\n    }\n    return `http://${station.host}:${station.port}`;\n  } else if (devHost) {\n    return `http://${station.stationId}:${station.port}`;\n  }\n  return '';\n}\n\nexport function getTestBaseUrl(dashboardEnabled: boolean, test: TestState) {\n  const stationBaseUrl = getStationBaseUrl(dashboardEnabled, test.station);\n  return `${stationBaseUrl}/tests/${test.testId}`;\n}\n\nexport function messageFromErrorResponse(error: Response) {\n  if (error.status === 0) {\n    // The response object probably does not contain useful info.\n    return 'The request failed. See the JavaScript console for more info.';\n  }\n  let errorBody;\n  try {\n    const errorJson = error.json();\n    errorBody = errorJson.error;\n  } catch (e) {\n    const response = (error as {_body?: string})._body;\n    if (response) {\n      errorBody = response.replace(/\\\\\"/g, '\"');\n    } else {\n      errorBody = JSON.stringify(error);\n    }\n  }\n  return `${error.status} - ${error.statusText || ''}\\n\\n${errorBody}`;\n}\n\n/**\n * For use with the new HttpClient from @angular/common/http.\n */\nexport function messageFromHttpClientErrorResponse(error: HttpErrorResponse) {\n  if (error.error instanceof ErrorEvent) {\n    // A client-side or network error occurred.\n    return error.error.message;\n  }\n  // The backend return an unsuccessful response code.\n  return JSON.stringify(error.error);\n}\n\nexport function sortByProperty(\n    array: Array<{}>, property: string, reverse = false) {\n  array.sort((a, b) => {\n    if (a[property] > b[property]) {\n      return 1;\n    } else if (a[property] < b[property]) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n  if (reverse) {\n    array.reverse();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/util.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides methods for flashing messages at the top of the screen.\n *\n * One message is displayed at a time. If multiple messages are added in rapid\n * succession, they are queued and displayed in turn.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { FlashMessage, FlashMessageType } from './flash-message.model';\n\n// Should match the CSS animation duration in vars.scss.\nconst dismissalDurationMs = 400;\n\nconst flashDurationMs = 5000;\n\n@Injectable()\nexport class FlashMessageService {\n  /**\n   * A queue of messages. The first message in the list will be displayed.\n   */\n  messages: FlashMessage[] = [];\n\n  private dismissalJob: NodeJS.Timer|number|null = null;\n\n  /**\n   * Cancels the countdown for dismissing the displayed message.\n   *\n   * Called by FlashMessagesComponent.\n   */\n  cancelDismissal() {\n    if (this.dismissalJob !== null) {\n      clearTimeout(this.dismissalJob as NodeJS.Timer);\n      this.dismissalJob = null;\n    }\n  }\n\n  /**\n   * Dismisses the displayed message.\n   *\n   * Called by FlashMessagesComponent.\n   */\n  dismissEarly() {\n    this.cancelDismissal();\n    this.dismiss();\n  }\n\n  /**\n   * Starts the countdown for dismissing the displayed message.\n   *\n   * Called by FlashMessagesComponent.\n   */\n  startDismissal() {\n    if (this.messages[0].isDismissed) {\n      return;\n    }\n    this.cancelDismissal();  // Reset timeout if it was set.\n    this.dismissalJob = setTimeout(() => {\n      this.dismiss();\n      this.dismissalJob = null;\n    }, flashDurationMs);\n  }\n\n  error(content: string, tooltip: string|null = null) {\n    this.addMessage(new FlashMessage(content, tooltip, FlashMessageType.error));\n  }\n\n  warn(content: string, tooltip: string|null = null) {\n    this.addMessage(new FlashMessage(content, tooltip, FlashMessageType.warn));\n  }\n\n  private addMessage(message: FlashMessage) {\n    this.messages.push(message);\n    if (this.messages.length === 1) {\n      this.startDismissal();\n    }\n  }\n\n  private dismiss() {\n    this.messages[0].isDismissed = true;\n    setTimeout(() => {\n      this.messages.shift();\n      if (this.messages.length > 0) {\n        this.startDismissal();\n      }\n    }, dismissalDurationMs + 100);  // Add a 100ms buffer for animation.\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/core/flash-message.service.ts","/**\n * @license Angular v4.4.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * AnimationBuilder is an injectable service that is available when the {\\@link\n * BrowserAnimationsModule BrowserAnimationsModule} or {\\@link NoopAnimationsModule\n * NoopAnimationsModule} modules are used within an application.\n *\n * The purpose if this service is to produce an animation sequence programmatically within an\n * angular component or directive.\n *\n * Programmatic animations are first built and then a player is created when the build animation is\n * attached to an element.\n *\n * ```ts\n * // remember to include the BrowserAnimationsModule module for this to work...\n * import {AnimationBuilder} from '\\@angular/animations';\n *\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first build the animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // then create a player from it\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * When an animation is built an instance of {\\@link AnimationFactory AnimationFactory} will be\n * returned. Using that an {\\@link AnimationPlayer AnimationPlayer} can be created which can then be\n * used to start the animation.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationBuilder = (function () {\n    function AnimationBuilder() {\n    }\n    /**\n     * @abstract\n     * @param {?} animation\n     * @return {?}\n     */\n    AnimationBuilder.prototype.build = function (animation) { };\n    return AnimationBuilder;\n}());\n/**\n * An instance of `AnimationFactory` is returned from {\\@link AnimationBuilder#build\n * AnimationBuilder.build}.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationFactory = (function () {\n    function AnimationFactory() {\n    }\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    AnimationFactory.prototype.create = function (element, options) { };\n    return AnimationFactory;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction animation(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 8 /* Reference */, animation: steps, options: options };\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nfunction animateChild(options) {\n    if (options === void 0) { options = null; }\n    return { type: 9 /* AnimateChild */, options: options };\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction useAnimation(animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 10 /* AnimateRef */, animation: animation, options: options };\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction query(selector, animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 11 /* Query */, selector: selector, animation: animation, options: options };\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings: timings, animation: animation };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n        this.totalTime = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = function () {\n        if (!this.hasStarted()) {\n            this.triggerMicrotask();\n            this._onStart();\n        }\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerMicrotask = function () {\n        var _this = this;\n        scheduleMicroTask(function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return NoopAnimationPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = (function () {\n    /**\n     * @param {?} _players\n     */\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._players = _players;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        var doneCount = 0;\n        var destroyCount = 0;\n        var startCount = 0;\n        var total = this._players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this._players.forEach(function (player) {\n                player.parentPlayer = _this;\n                player.onDone(function () {\n                    if (++doneCount >= total) {\n                        _this._onFinish();\n                    }\n                });\n                player.onDestroy(function () {\n                    if (++destroyCount >= total) {\n                        _this._onDestroy();\n                    }\n                });\n                player.onStart(function () {\n                    if (++startCount >= total) {\n                        _this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this._players.reduce(function (time, player) { return Math.max(time, player.totalTime); }, 0);\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onStart = function () {\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this._players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = function () {\n        this._onFinish();\n        this._players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = function () { this._onDestroy(); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onDestroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = function () {\n        this._players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = function (p) {\n        var /** @type {?} */ timeAtPosition = p * this.totalTime;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = function () {\n        var /** @type {?} */ min = 0;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._players; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.beforeDestroy = function () {\n        this.players.forEach(function (player) {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    };\n    return AnimationGroupPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵPRE_STYLE = '!';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AnimationBuilder, AnimationFactory, AUTO_STYLE, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, NoopAnimationPlayer, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n//# sourceMappingURL=animations.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/animations/@angular/animations.es5.js\n// module id = 48\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Summary info about a station.\n */\n\nexport enum StationStatus {\n  online = 9,\n  unreachable,\n}\n\nexport class Station {\n  cell: string|null;\n  host: string;\n  hostPort: string;  // Used to uniquely identify stations.\n  label: string;\n  port: string;\n  stationId: string;\n  status: StationStatus;\n  testDescription: string|null;\n  testName: string|null;\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: Station) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/station.model.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Entry point for the Javascript bundle.\n *\n * Bootstraps the app using the Angular module definition in app.module.ts.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nif (process.env.ENV === 'build') {\n  enableProdMode();\n}\n\nexport function main() {\n  return platformBrowserDynamic().bootstrapModule(AppModule).then(function(MODULE_REF) {   if (module[\"hot\"]) {     module[\"hot\"][\"accept\"]();          if (MODULE_REF.instance[\"hmrOnInit\"]) {       module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);     }     if (MODULE_REF.instance[\"hmrOnStatus\"]) {       module[\"hot\"][\"apply\"](function(status) {         MODULE_REF.instance[\"hmrOnStatus\"](status);       });     }     if (MODULE_REF.instance[\"hmrOnCheck\"]) {       module[\"hot\"][\"check\"](function(err, outdatedModules) {         MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules);       });     }     if (MODULE_REF.instance[\"hmrOnDecline\"]) {       module[\"hot\"][\"decline\"](function(dependencies) {         MODULE_REF.instance[\"hmrOnDecline\"](dependencies);       });     }     module[\"hot\"][\"dispose\"](function(store) {       MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store);       MODULE_REF.destroy();       MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store);     });   }   return MODULE_REF; });\n}\n\nif (document.readyState === 'complete') {\n  main();\n} else {\n  document.addEventListener('DOMContentLoaded', main);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/main.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The root module, responsible for orchestrating the application as a whole.\n *\n * See https://angular.io/docs/ts/latest/guide/ngmodule.html for more info\n * about modules in Angular.\n */\n\nimport { NgModule, ApplicationRef } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n/* Our Modules */\nimport { CoreModule } from './core/core.module';\nimport { PlugsModule } from './plugs/plugs.module';\nimport { SharedModule } from './shared/shared.module';\nimport { StationsModule } from './stations/stations.module';\n\nimport { removeNgStyles, createNewHosts } from '@angularclass/hmr';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    FormsModule,\n\n    // Our modules\n    CoreModule,\n    PlugsModule,\n    SharedModule,\n    StationsModule,\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ],\n})\nexport class AppModule {\n  constructor(public appRef: ApplicationRef) {}\n  hmrOnInit(store) {\n    console.log('HMR store', store);\n  }\n  hmrOnDestroy(store) {\n    let cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n    // recreate elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // remove styles\n    removeNgStyles();\n  }\n  hmrAfterDestroy(store) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/app.module.ts","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, NgModule, NgZone, RendererFactory2, ViewEncapsulation } from '@angular/core';\nimport { BrowserModule, DOCUMENT, ɵDomRendererFactory2 } from '@angular/platform-browser';\nimport { AnimationBuilder, AnimationFactory, sequence } from '@angular/animations';\nimport { AnimationDriver, ɵAnimationEngine, ɵAnimationStyleNormalizer, ɵNoopAnimationDriver, ɵWebAnimationsDriver, ɵWebAnimationsStyleNormalizer, ɵsupportsWebAnimations } from '@angular/animations/browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserAnimationBuilder = (function (_super) {\n    tslib_1.__extends(BrowserAnimationBuilder, _super);\n    /**\n     * @param {?} rootRenderer\n     * @param {?} doc\n     */\n    function BrowserAnimationBuilder(rootRenderer, doc) {\n        var _this = _super.call(this) || this;\n        _this._nextAnimationId = 0;\n        var typeData = {\n            id: '0',\n            encapsulation: ViewEncapsulation.None,\n            styles: [],\n            data: { animation: [] }\n        };\n        _this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n        return _this;\n    }\n    /**\n     * @param {?} animation\n     * @return {?}\n     */\n    BrowserAnimationBuilder.prototype.build = function (animation) {\n        var /** @type {?} */ id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var /** @type {?} */ entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    };\n    return BrowserAnimationBuilder;\n}(AnimationBuilder));\nBrowserAnimationBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationBuilder.ctorParameters = function () { return [\n    { type: RendererFactory2, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\nvar BrowserAnimationFactory = (function (_super) {\n    tslib_1.__extends(BrowserAnimationFactory, _super);\n    /**\n     * @param {?} _id\n     * @param {?} _renderer\n     */\n    function BrowserAnimationFactory(_id, _renderer) {\n        var _this = _super.call(this) || this;\n        _this._id = _id;\n        _this._renderer = _renderer;\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    BrowserAnimationFactory.prototype.create = function (element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    };\n    return BrowserAnimationFactory;\n}(AnimationFactory));\nvar RendererAnimationPlayer = (function () {\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} options\n     * @param {?} _renderer\n     */\n    function RendererAnimationPlayer(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._listen = function (eventName, callback) {\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\n    };\n    /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._command = function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDone = function (fn) { this._listen('done', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onStart = function (fn) { this._listen('start', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDestroy = function (fn) { this._listen('destroy', fn); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.init = function () { this._command('init'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.play = function () {\n        this._command('play');\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.pause = function () { this._command('pause'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.restart = function () { this._command('restart'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.finish = function () { this._command('finish'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.destroy = function () { this._command('destroy'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.reset = function () { this._command('reset'); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.setPosition = function (p) { this._command('setPosition', p); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return RendererAnimationPlayer;\n}());\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANIMATION_PREFIX = '@';\nvar DISABLE_ANIMATIONS_FLAG = '@.disabled';\nvar AnimationRendererFactory = (function () {\n    /**\n     * @param {?} delegate\n     * @param {?} engine\n     * @param {?} _zone\n     */\n    function AnimationRendererFactory(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        this._cdRecurDepth = 0;\n        engine.onRemovalComplete = function (element, delegate) {\n            // Note: if an component element has a leave animation, and the component\n            // a host leave animation, the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            if (delegate && delegate.parentNode(element)) {\n                delegate.removeChild(element.parentNode, element);\n            }\n        };\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.createRenderer = function (hostElement, type) {\n        var _this = this;\n        var /** @type {?} */ EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            var /** @type {?} */ renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        var /** @type {?} */ componentId = type.id;\n        var /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var /** @type {?} */ animationTriggers = (type.data['animation']);\n        animationTriggers.forEach(function (trigger) { return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger); });\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.begin = function () {\n        this._cdRecurDepth++;\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype._scheduleCountTask = function () {\n        var _this = this;\n        Zone.current.scheduleMicroTask('incremenet the animation microtask', function () { return _this._microtaskId++; });\n    };\n    /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.scheduleListenerCallback = function (count, fn, data) {\n        var _this = this;\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(function () { return fn(data); });\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(function () {\n                _this._zone.run(function () {\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\n                        var fn = tuple[0], data = tuple[1];\n                        fn(data);\n                    });\n                    _this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.end = function () {\n        var _this = this;\n        this._cdRecurDepth--;\n        // this is to prevent animations from running twice when an inner\n        // component does CD when a parent component insted has inserted it\n        if (this._cdRecurDepth == 0) {\n            this._zone.runOutsideAngular(function () {\n                _this._scheduleCountTask();\n                _this.engine.flush(_this._microtaskId);\n            });\n        }\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.whenRenderingDone = function () { return this.engine.whenRenderingDone(); };\n    return AnimationRendererFactory;\n}());\nAnimationRendererFactory.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nAnimationRendererFactory.ctorParameters = function () { return [\n    { type: RendererFactory2, },\n    { type: ɵAnimationEngine, },\n    { type: NgZone, },\n]; };\nvar BaseAnimationRenderer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return delegate.destroyNode(n); } : null;\n    }\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.destroy = function () {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createElement = function (name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createComment = function (value) { return this.delegate.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createText = function (value) { return this.delegate.createText(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.appendChild = function (parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeChild = function (parent, oldChild) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.selectRootElement = function (selectorOrNode) { return this.delegate.selectRootElement(selectorOrNode); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setAttribute = function (el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeAttribute = function (el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.addClass = function (el, name) { this.delegate.addClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeClass = function (el, name) { this.delegate.removeClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setStyle = function (el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeStyle = function (el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setProperty = function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n            this.disableAnimations(el, !!value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setValue = function (node, value) { this.delegate.setValue(node, value); };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.disableAnimations = function (element, value) {\n        this.engine.disableAnimations(element, value);\n    };\n    return BaseAnimationRenderer;\n}());\nvar AnimationRenderer = (function (_super) {\n    tslib_1.__extends(AnimationRenderer, _super);\n    /**\n     * @param {?} factory\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\n        _this.factory = factory;\n        _this.namespaceId = namespaceId;\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationRenderer.prototype.setProperty = function (el, name, value) {\n        if (name.charAt(0) == ANIMATION_PREFIX) {\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n                value = value === undefined ? true : !!value;\n                this.disableAnimations(el, /** @type {?} */ (value));\n            }\n            else {\n                this.engine.process(this.namespaceId, el, name.substr(1), value);\n            }\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        var _this = this;\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\n            var /** @type {?} */ element = resolveElementFromTarget(target);\n            var /** @type {?} */ name = eventName.substr(1);\n            var /** @type {?} */ phase = '';\n            // @listener.phase is for trigger animation callbacks\n            // @@listener is for animation builder callbacks\n            if (name.charAt(0) != ANIMATION_PREFIX) {\n                _a = parseTriggerCallbackName(name), name = _a[0], phase = _a[1];\n            }\n            return this.engine.listen(this.namespaceId, element, name, phase, function (event) {\n                var /** @type {?} */ countId = ((event))['_data'] || -1;\n                _this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n        var _a;\n    };\n    return AnimationRenderer;\n}(BaseAnimationRenderer));\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName) {\n    var /** @type {?} */ dotIndex = triggerName.indexOf('.');\n    var /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n    var /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = (function (_super) {\n    tslib_1.__extends(InjectableAnimationEngine, _super);\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function InjectableAnimationEngine(driver, normalizer) {\n        return _super.call(this, driver, normalizer) || this;\n    }\n    return InjectableAnimationEngine;\n}(ɵAnimationEngine));\nInjectableAnimationEngine.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nInjectableAnimationEngine.ctorParameters = function () { return [\n    { type: AnimationDriver, },\n    { type: ɵAnimationStyleNormalizer, },\n]; };\n/**\n * @return {?}\n */\nfunction instantiateSupportedAnimationDriver() {\n    if (ɵsupportsWebAnimations()) {\n        return new ɵWebAnimationsDriver();\n    }\n    return new ɵNoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nfunction instantiateDefaultStyleNormalizer() {\n    return new ɵWebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    { provide: ɵAnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\n    { provide: ɵAnimationEngine, useClass: InjectableAnimationEngine }, {\n        provide: RendererFactory2,\n        useFactory: instantiateRendererFactory,\n        deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver }\n].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{ provide: AnimationDriver, useClass: ɵNoopAnimationDriver }].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar BrowserAnimationsModule = (function () {\n    function BrowserAnimationsModule() {\n    }\n    return BrowserAnimationsModule;\n}());\nBrowserAnimationsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserModule],\n                providers: BROWSER_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationsModule.ctorParameters = function () { return []; };\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationsModule = (function () {\n    function NoopAnimationsModule() {\n    }\n    return NoopAnimationsModule;\n}());\nNoopAnimationsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserModule],\n                providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nNoopAnimationsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserAnimationsModule, NoopAnimationsModule, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BaseAnimationRenderer as ɵa, BROWSER_ANIMATIONS_PROVIDERS as ɵf, BROWSER_NOOP_ANIMATIONS_PROVIDERS as ɵg, InjectableAnimationEngine as ɵb, instantiateDefaultStyleNormalizer as ɵd, instantiateRendererFactory as ɵe, instantiateSupportedAnimationDriver as ɵc };\n//# sourceMappingURL=animations.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/platform-browser/@angular/platform-browser/animations.es5.js\n// module id = 563\n// module chunks = 1","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { AUTO_STYLE, NoopAnimationPlayer, sequence, style, ɵAnimationGroupPlayer, ɵPRE_STYLE } from '@angular/animations';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new ɵAnimationGroupPlayer(players);\n    }\n}\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var errors = [];\n    var normalizedKeyframes = [];\n    var previousOffset = -1;\n    var previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var offset = kf['offset'];\n        var isSameOffset = offset == previousOffset;\n        var normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var normalizedProp = prop;\n            var normalizedValue = kf[prop];\n            if (prop !== 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n                switch (normalizedValue) {\n                    case ɵPRE_STYLE:\n                        normalizedValue = preStyles[prop];\n                        break;\n                    case AUTO_STYLE:\n                        normalizedValue = postStyles[prop];\n                        break;\n                    default:\n                        normalizedValue =\n                            normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n                        break;\n                }\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n            break;\n    }\n}\nfunction copyAnimationEvent(e, phaseName, totalTime) {\n    var event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime);\n    var data = e['_data'];\n    if (data != null) {\n        event['_data'] = data;\n    }\n    return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime };\n}\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    var value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\nfunction parseTimelineCommand(command) {\n    var separatorPos = command.indexOf(':');\n    var id = command.substring(1, separatorPos);\n    var action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar _contains = function (elm1, elm2) { return false; };\nvar _matches = function (element, selector) { return false; };\nvar _query = function (element, selector, multi) {\n    return [];\n};\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return elm1.contains(elm2); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var proto = Element.prototype;\n        var fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\nvar matchesElement = _matches;\nvar containsElement = _contains;\nvar invokeQuery = _query;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental\n */\nvar NoopAnimationDriver = (function () {\n    function NoopAnimationDriver() {\n    }\n    NoopAnimationDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    NoopAnimationDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    NoopAnimationDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    NoopAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    NoopAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new NoopAnimationPlayer();\n    };\n    return NoopAnimationDriver;\n}());\n/**\n * @experimental\n */\nvar AnimationDriver = (function () {\n    function AnimationDriver() {\n    }\n    return AnimationDriver;\n}());\nAnimationDriver.NOOP = new NoopAnimationDriver();\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_SECOND = 1000;\nvar SUBSTITUTION_EXPR_START = '{{';\nvar SUBSTITUTION_EXPR_END = '}}';\nvar ENTER_CLASSNAME = 'ng-enter';\nvar LEAVE_CLASSNAME = 'ng-leave';\nvar ENTER_SELECTOR = '.ng-enter';\nvar LEAVE_SELECTOR = '.ng-leave';\nvar NG_TRIGGER_CLASSNAME = 'ng-trigger';\nvar NG_TRIGGER_SELECTOR = '.ng-trigger';\nvar NG_ANIMATING_CLASSNAME = 'ng-animating';\nvar NG_ANIMATING_SELECTOR = '.ng-animating';\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            return value;\n    }\n}\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ?\n        timings :\n        parseTimeExpression(timings, errors, allowNegativeValues);\n}\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var duration;\n    var delay = 0;\n    var easing = '';\n    if (typeof exp === 'string') {\n        var matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = exp;\n    }\n    if (!allowNegativeValues) {\n        var containsErrors = false;\n        var startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\nfunction copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\nfunction normalizeStyles(styles) {\n    var normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\nfunction copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\nfunction setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return steps;\n}\nfunction validateStyleParams(value, options, errors) {\n    var params = options.params || {};\n    var matches = extractStyleParams(value);\n    if (matches.length) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar PARAM_REGEX = new RegExp(SUBSTITUTION_EXPR_START + \"\\\\s*(.+?)\\\\s*\" + SUBSTITUTION_EXPR_END, 'g');\nfunction extractStyleParams(value) {\n    var params = [];\n    if (typeof value === 'string') {\n        var val = value.toString();\n        var match = void 0;\n        while (match = PARAM_REGEX.exec(val)) {\n            params.push(match[1]);\n        }\n        PARAM_REGEX.lastIndex = 0;\n    }\n    return params;\n}\nfunction interpolateParams(value, params, errors) {\n    var original = value.toString();\n    var str = original.replace(PARAM_REGEX, function (_, varName) {\n        var localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\nfunction iteratorToArray(iterator) {\n    var arr = [];\n    var item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n    return duration === 0 || delay === 0;\n}\nfunction visitDslNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(node, context);\n        case 0 /* State */:\n            return visitor.visitState(node, context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(node, context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(node, context);\n        case 3 /* Group */:\n            return visitor.visitGroup(node, context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(node, context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(node, context);\n        case 6 /* Style */:\n            return visitor.visitStyle(node, context);\n        case 8 /* Reference */:\n            return visitor.visitReference(node, context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(node, context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(node, context);\n        case 11 /* Query */:\n            return visitor.visitQuery(node, context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(node, context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nfunction parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        ((transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        eventStr = parseAnimationAlias(eventStr, errors);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\nvar TRUE_BOOLEAN_VALUES = new Set();\nTRUE_BOOLEAN_VALUES.add('true');\nTRUE_BOOLEAN_VALUES.add('1');\nvar FALSE_BOOLEAN_VALUES = new Set();\nFALSE_BOOLEAN_VALUES.add('false');\nFALSE_BOOLEAN_VALUES.add('0');\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    var /** @type {?} */ LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n    var /** @type {?} */ RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n        }\n        if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n            rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELF_TOKEN = ':self';\nvar SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nfunction buildAnimationAst(metadata, errors) {\n    return new AnimationAstBuilderVisitor().build(metadata, errors);\n}\nvar LEAVE_TOKEN = ':leave';\nvar LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\nvar ENTER_TOKEN = ':enter';\nvar ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = (function () {\n    function AnimationAstBuilderVisitor() {\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return (visitDslNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles = {};\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = (def);\n                var /** @type {?} */ name = stateDef_1.name;\n                name.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        return {\n            type: 7 /* Trigger */,\n            name: metadata.name, states: states, transitions: transitions, queryCount: queryCount, depCount: depCount,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = function (metadata, context) {\n        var /** @type {?} */ styleAst = this.visitStyle(metadata.styles, context);\n        var /** @type {?} */ astParams = (metadata.options && metadata.options.params) || null;\n        if (styleAst.containsDynamicStyles) {\n            var /** @type {?} */ missingSubs_1 = new Set();\n            var /** @type {?} */ params_1 = astParams || {};\n            styleAst.styles.forEach(function (value) {\n                if (isObject(value)) {\n                    var /** @type {?} */ stylesObj_1 = (value);\n                    Object.keys(stylesObj_1).forEach(function (prop) {\n                        extractStyleParams(stylesObj_1[prop]).forEach(function (sub) {\n                            if (!params_1.hasOwnProperty(sub)) {\n                                missingSubs_1.add(sub);\n                            }\n                        });\n                    });\n                }\n            });\n            if (missingSubs_1.size) {\n                var /** @type {?} */ missingSubsArr = iteratorToArray(missingSubs_1.values());\n                context.errors.push(\"state(\\\"\" + metadata.name + \"\\\", ...) must define default values for all the following style substitutions: \" + missingSubsArr.join(', '));\n            }\n        }\n        return {\n            type: 0 /* State */,\n            name: metadata.name,\n            style: styleAst,\n            options: astParams ? { params: astParams } : null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        return {\n            type: 1 /* Transition */,\n            matchers: matchers,\n            animation: animation,\n            queryCount: context.queryCount,\n            depCount: context.depCount,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = function (metadata, context) {\n        var _this = this;\n        return {\n            type: 2 /* Sequence */,\n            steps: metadata.steps.map(function (s) { return visitDslNode(_this, s, context); }),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitDslNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        return {\n            type: 3 /* Group */,\n            steps: steps,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styleAst;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : style({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styleAst = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ _styleAst = this.visitStyle(styleMetadata_1, context);\n            _styleAst.isEmptyStep = isEmpty;\n            styleAst = _styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return {\n            type: 4 /* Animate */,\n            timings: timingAst,\n            style: styleAst,\n            options: null\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            ((metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == AUTO_STYLE) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ containsDynamicStyles = false;\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = (easing);\n                    delete styleMap['easing'];\n                }\n                if (!containsDynamicStyles) {\n                    for (var /** @type {?} */ prop in styleMap) {\n                        var /** @type {?} */ value = styleMap[prop];\n                        if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n                            containsDynamicStyles = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return {\n            type: 6 /* Style */,\n            styles: styles,\n            easing: collectedEasing,\n            offset: metadata.offset, containsDynamicStyles: containsDynamicStyles,\n            options: null\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                var /** @type {?} */ collectedStyles = context.collectedStyles[((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = { type: 5 /* Keyframes */, styles: [], options: null };\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return ast;\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style$$1 = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style$$1.offset != null ? style$$1.offset : consumeOffset(style$$1.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style$$1.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style$$1;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n            ast.styles.push(kf);\n        });\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = function (metadata, context) {\n        return {\n            type: 8 /* Reference */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = function (metadata, context) {\n        context.depCount++;\n        return {\n            type: 9 /* AnimateChild */,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = function (metadata, context) {\n        return {\n            type: 10 /* AnimateRef */,\n            animation: this.visitReference(metadata.animation, context),\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = function (metadata, context) {\n        var /** @type {?} */ parentSelector = ((context.currentQuerySelector));\n        var /** @type {?} */ options = ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        return {\n            type: 11 /* Query */,\n            selector: selector,\n            limit: options.limit || 0,\n            optional: !!options.optional, includeSelf: includeSelf, animation: animation,\n            originalSelector: metadata.selector,\n            options: normalizeAnimationOptions(metadata.options)\n        };\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        return {\n            type: 12 /* Stagger */,\n            animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context), timings: timings,\n            options: null\n        };\n    };\n    return AnimationAstBuilderVisitor;\n}());\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    selector = selector.replace(ENTER_TOKEN_REGEX, ENTER_SELECTOR)\n        .replace(LEAVE_TOKEN_REGEX, LEAVE_SELECTOR)\n        .replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = (function () {\n    /**\n     * @param {?} errors\n     */\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return makeTimingAst(/** @type {?} */ (duration), 0, '');\n    }\n    var /** @type {?} */ strValue = (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        var /** @type {?} */ ast = (makeTimingAst(0, 0, ''));\n        ast.dynamic = true;\n        ast.strValue = strValue;\n        return (ast);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @return {?}\n */\nfunction makeTimingAst(duration, delay, easing) {\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ElementInstructionMap = (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_FRAME_IN_MILLISECONDS = 1;\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = function (driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        visitDslNode(this, ast, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = function (ast, context) {\n        context.updateOptions(ast.options, true);\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode.type == 6 /* Style */) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return visitDslNode(_this, s, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            visitDslNode(_this, s, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitTiming = function (ast, context) {\n        if (((ast)).dynamic) {\n            var /** @type {?} */ strValue = ((ast)).strValue;\n            var /** @type {?} */ timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n            return resolveTiming(timingValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style$$1 = ast.style;\n        if (style$$1.type == 5 /* Keyframes */) {\n            this.visitKeyframes(style$$1, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style$$1), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode.type === 6 /* Style */ ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            visitDslNode(_this, ast.animation, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = function (ast, context) {\n        var /** @type {?} */ parentContext = ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (delay) {\n            timeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = timeline.currentTime;\n        visitDslNode(this, ast.animation, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nvar DEFAULT_NOOP_PREVIOUS_NODE = ({});\nvar AnimationTimelineContext = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} element\n     * @param {?} subInstructions\n     * @param {?} errors\n     * @param {?} timelines\n     * @param {?=} initialTimeline\n     */\n    function AnimationTimelineContext(_driver, element, subInstructions, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            ((optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_2 = options['params'] = {};\n                Object.keys(oldParams_1).forEach(function (name) { params_2[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            var /** @type {?} */ multi = limit != 1;\n            var /** @type {?} */ elements = this._driver.query(this.element, selector, multi);\n            if (limit !== 0) {\n                elements = elements.slice(0, limit);\n            }\n            results.push.apply(results, elements);\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nvar TimelineBuilder = (function () {\n    /**\n     * @param {?} element\n     * @param {?} startTime\n     * @param {?=} _elementTimelineStylesLookup\n     */\n    function TimelineBuilder(element, startTime, _elementTimelineStylesLookup) {\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = function (delay) {\n        // in the event that a style() step is placed right before a stagger()\n        // and that style() step is the very first style() value in the animation\n        // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n        // properly applies the style() values to work with the stagger...\n        var /** @type {?} */ hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n        if (this.duration || hasPreStyleStep) {\n            this.forwardTime(this.currentTime + delay);\n            if (hasPreStyleStep) {\n                this.snapshotCurrentStyles();\n            }\n        }\n        else {\n            this.startTime += delay;\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || AUTO_STYLE;\n            _this._currentKeyframe[prop] = AUTO_STYLE;\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    AUTO_STYLE;\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == ɵPRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nvar SubTimelineBuilder = (function (_super) {\n    tslib_1.__extends(SubTimelineBuilder, _super);\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} preStyleProps\n     * @param {?} postStyleProps\n     * @param {?} timings\n     * @param {?=} _stretchStartingKeyframe\n     */\n    function SubTimelineBuilder(element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n              When the keyframe is stretched then it means that the delay before the animation\n              starts is gone. Instead the first keyframe is placed at the start of the animation\n              and it is then copied to where it starts when the original delay is over. This basically\n              means nothing animates during that delay, but the styles are still renderered. For this\n              to work the original offset values that exist in the original keyframes must be \"warped\"\n              so that they can take the new keyframe + delay into account.\n      \n              delay=1000, duration=1000, keyframes = 0 .5 1\n      \n              turns into\n      \n              delay=0, duration=2000, keyframes = 0 .33 .66 1\n             */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = AUTO_STYLE; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Animation = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} input\n     */\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var errors = [];\n        var ast = buildAnimationAst(input, errors);\n        if (errors.length) {\n            var errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental Animation support is experimental.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */ var AnimationStyleNormalizer = (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * @experimental Animation support is experimental.\n */\nvar NoopAnimationStyleNormalizer = (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) { return propertyName; };\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        return value;\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsStyleNormalizer = (function (_super) {\n    tslib_1.__extends(WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nvar DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?=} errors\n * @return {?}\n */\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, errors) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        errors: errors\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_OBJECT = {};\nvar AnimationTransitionFactory = (function () {\n    /**\n     * @param {?} _triggerName\n     * @param {?} ast\n     * @param {?} _stateStyles\n     */\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} stateName\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.buildStyles = function (stateName, params, errors) {\n        var /** @type {?} */ backupStateStyler = this._stateStyles['*'];\n        var /** @type {?} */ stateStyler = this._stateStyles[stateName];\n        var /** @type {?} */ backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n        return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?=} currentOptions\n     * @param {?=} nextOptions\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = function (driver, element, currentState, nextState, currentOptions, nextOptions, subInstructions) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n        var /** @type {?} */ nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n        var /** @type {?} */ nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n        var /** @type {?} */ queriedElements = new Set();\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ isRemoval = nextState === 'void';\n        var /** @type {?} */ animationOptions = { params: Object.assign({}, transitionAnimationParams, nextAnimationParams) };\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        if (errors.length) {\n            return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, errors);\n        }\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap);\n    };\n    return AnimationTransitionFactory;\n}());\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\nvar AnimationStateStyles = (function () {\n    /**\n     * @param {?} styles\n     * @param {?} defaultParams\n     */\n    function AnimationStateStyles(styles, defaultParams) {\n        this.styles = styles;\n        this.defaultParams = defaultParams;\n    }\n    /**\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationStateStyles.prototype.buildStyles = function (params, errors) {\n        var /** @type {?} */ finalStyles = {};\n        var /** @type {?} */ combinedParams = copyObj(this.defaultParams);\n        Object.keys(params).forEach(function (key) {\n            var /** @type {?} */ value = params[key];\n            if (value != null) {\n                combinedParams[key] = value;\n            }\n        });\n        this.styles.styles.forEach(function (value) {\n            if (typeof value !== 'string') {\n                var /** @type {?} */ styleObj_1 = (value);\n                Object.keys(styleObj_1).forEach(function (prop) {\n                    var /** @type {?} */ val = styleObj_1[prop];\n                    if (val.length > 1) {\n                        val = interpolateParams(val, combinedParams, errors);\n                    }\n                    finalStyles[prop] = val;\n                });\n            }\n        });\n        return finalStyles;\n    };\n    return AnimationStateStyles;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nfunction buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AnimationTrigger = (function () {\n    /**\n     * @param {?} name\n     * @param {?} ast\n     */\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var defaultParams = (ast.options && ast.options.params) || {};\n            _this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    /**\n     * @param {?} currentState\n     * @param {?} params\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchStyles = function (currentState, params, errors) {\n        return this.fallbackTransition.buildStyles(currentState, params, errors);\n    };\n    return AnimationTrigger;\n}());\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = { type: 2 /* Sequence */, steps: [], options: null };\n    var /** @type {?} */ transition = {\n        type: 1 /* Transition */,\n        animation: animation,\n        matchers: matchers,\n        options: null,\n        queryCount: 0,\n        depCount: 0\n    };\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} _normalizer\n     */\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, AUTO_STYLE); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUEUED_CLASSNAME = 'ng-animate-queued';\nvar QUEUED_SELECTOR = '.ng-animate-queued';\nvar DISABLED_CLASSNAME = 'ng-animate-disabled';\nvar DISABLED_SELECTOR = '.ng-animate-disabled';\nvar EMPTY_PLAYER_ARRAY = [];\nvar NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\nvar REMOVAL_FLAG = '__ng_removed';\nvar StateValue = (function () {\n    /**\n     * @param {?} input\n     */\n    function StateValue(input) {\n        var isObj = input && input.hasOwnProperty('value');\n        var value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var options = copyObj(input);\n            delete options['value'];\n            this.options = options;\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    Object.defineProperty(StateValue.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this.options.params); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_2 = ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_2[prop] == null) {\n                    oldParams_2[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nvar VOID_VALUE = 'void';\nvar DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nvar DELETED_STATE_VALUE = new StateValue('DELETED');\nvar AnimationTransitionNamespace = (function () {\n    /**\n     * @param {?} id\n     * @param {?} hostElement\n     * @param {?} _engine\n     */\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = null;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ isRemoval = toState.value === VOID_VALUE;\n        // normally this isn't reached by here, however, if an object expression\n        // is passed in then it may be a new object each time. Comparing the value\n        // is important since that will stay the same despite there being a new object.\n        // The removal arc here is special cased because the same element is triggered\n        // twice in the event that it contains animations on the outer/inner portions\n        // of the host container\n        if (!isRemoval && fromState.value === toState.value) {\n            // this means that despite the value not changing, some inner params\n            // have changed which means that the animation final styles need to be applied\n            if (!objEquals(fromState.params, toState.params)) {\n                var /** @type {?} */ errors = [];\n                var /** @type {?} */ fromStyles_1 = trigger.matchStyles(fromState.value, fromState.params, errors);\n                var /** @type {?} */ toStyles_1 = trigger.matchStyles(toState.value, toState.params, errors);\n                if (errors.length) {\n                    this._engine.reportError(errors);\n                }\n                else {\n                    this._engine.afterFlush(function () {\n                        eraseStyles(element, fromStyles_1);\n                        setStyles(element, toStyles_1);\n                    });\n                }\n            }\n            return;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, QUEUED_CLASSNAME);\n            player.onStart(function () { removeClass(element, QUEUED_CLASSNAME); });\n        }\n        player.onDone(function () {\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._destroyInnerNodes = function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            if (animate && containsClass(elm, _this._hostClassName)) {\n                var /** @type {?} */ innerNs = _this._engine.namespacesByHostElement.get(elm);\n                // special case for a host element with animations on the same element\n                if (innerNs) {\n                    innerNs.removeNode(elm, context, true);\n                }\n                _this.removeNode(elm, context, true);\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = function (element, context, doNotRecurse) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (!doNotRecurse && element.childElementCount) {\n            this._destroyInnerNodes(element, context, true);\n        }\n        var /** @type {?} */ triggerStates = engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, false);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                engine.markElementAsRemoved(this.id, element, true, context);\n                optimizeGroupPlayer(players_1).onDone(function () { return engine.processLeaveNode(element); });\n                return;\n            }\n        }\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent = element;\n                while (parent = parent.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = ((engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        ((baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._destroyInnerNodes(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\nvar TransitionAnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} _normalizer\n     */\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.disabledNodes = new Set();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            this._fetchNamespace(namespaceId).insertNode(element, parent);\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} element\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsDisabled = function (element, value) {\n        if (value) {\n            if (!this.disabledNodes.has(element)) {\n                this.disabledNodes.add(element);\n                addClass(element, DISABLED_CLASSNAME);\n            }\n        }\n        else if (this.disabledNodes.has(element)) {\n            this.disabledNodes.delete(element);\n            removeClass(element, DISABLED_CLASSNAME);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = function (namespaceId, element, context, doNotRecurse) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context, doNotRecurse);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = function (entry, subTimelines) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, entry.fromState.options, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = function (containerElement) {\n        var _this = this;\n        var /** @type {?} */ elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n        elements.forEach(function (element) {\n            var /** @type {?} */ players = _this.playersByElement.get(element);\n            if (players) {\n                players.forEach(function (player) {\n                    // special case for when an element is set for destruction, but hasn't started.\n                    // in this situation we want to delay the destruction until the flush occurs\n                    // so that any event listeners attached to the player are triggered.\n                    if (player.queued) {\n                        player.markedForDestroy = true;\n                    }\n                    else {\n                        player.destroy();\n                    }\n                });\n            }\n            var /** @type {?} */ stateMap = _this.statesByElement.get(element);\n            if (stateMap) {\n                Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n            }\n        });\n        if (this.playersByQueriedElement.size == 0)\n            return;\n        elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n        if (elements.length) {\n            elements.forEach(function (element) {\n                var /** @type {?} */ players = _this.playersByQueriedElement.get(element);\n                if (players) {\n                    players.forEach(function (player) { return player.finish(); });\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = function (element) {\n        var _this = this;\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n        if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n            this.markElementAsDisabled(element, false);\n        }\n        this.driver.query(element, DISABLED_SELECTOR, true).forEach(function (node) {\n            _this.markElementAsDisabled(element, false);\n        });\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            var /** @type {?} */ cleanupFns = [];\n            try {\n                players = this._flushAnimations(cleanupFns, microtaskId);\n            }\n            finally {\n                for (var /** @type {?} */ i = 0; i < cleanupFns.length; i++) {\n                    cleanupFns[i]();\n                }\n            }\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} errors\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.reportError = function (errors) {\n        throw new Error(\"Unable to process animations due to the following failed trigger transitions\\n \" + errors.join('\\n'));\n    };\n    /**\n     * @param {?} cleanupFns\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = function (cleanupFns, microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        var /** @type {?} */ disabledElementsSet = new Set();\n        this.disabledNodes.forEach(function (node) {\n            disabledElementsSet.add(node);\n            var /** @type {?} */ nodesThatAreDisabled = _this.driver.query(node, QUEUED_SELECTOR, true);\n            for (var /** @type {?} */ i = 0; i < nodesThatAreDisabled.length; i++) {\n                disabledElementsSet.add(nodesThatAreDisabled[i]);\n            }\n        });\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allEnterNodes = this.collectedEnterElements.length ?\n            this.collectedEnterElements.filter(createIsRootFilterFn(this.collectedEnterElements)) :\n            [];\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        for (var /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n            addClass(allEnterNodes[i], ENTER_CLASSNAME);\n        }\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ leaveNodesWithoutAnimations = new Set();\n        for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i];\n            var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                addClass(element, LEAVE_CLASSNAME);\n                allLeaveNodes.push(element);\n                if (!details.hasAnimation) {\n                    leaveNodesWithoutAnimations.add(element);\n                }\n            }\n        }\n        cleanupFns.push(function () {\n            allEnterNodes.forEach(function (element) { return removeClass(element, ENTER_CLASSNAME); });\n            allLeaveNodes.forEach(function (element) {\n                removeClass(element, LEAVE_CLASSNAME);\n                _this.processLeaveNode(element);\n            });\n        });\n        var /** @type {?} */ allPlayers = [];\n        var /** @type {?} */ erroneousTransitions = [];\n        for (var /** @type {?} */ i = this._namespaceList.length - 1; i >= 0; i--) {\n            var /** @type {?} */ ns = this._namespaceList[i];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                allPlayers.push(player);\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ instruction = ((_this._buildInstruction(entry, subTimelines)));\n                if (instruction.errors && instruction.errors.length) {\n                    erroneousTransitions.push(instruction);\n                    return;\n                }\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        if (erroneousTransitions.length) {\n            var /** @type {?} */ errors_1 = [];\n            erroneousTransitions.forEach(function (instruction) {\n                errors_1.push(\"@\" + instruction.triggerName + \" has failed due to:\\n\"); /** @type {?} */\n                ((instruction.errors)).forEach(function (error) { return errors_1.push(\"- \" + error + \"\\n\"); });\n            });\n            allPlayers.forEach(function (player) { return player.destroy(); });\n            this.reportError(errors_1);\n        }\n        // these can only be detected here since we have a map of all the elements\n        // that have animations attached to them... We use a set here in the event\n        // multiple enter captures on the same element were caught in different\n        // renderer namespaces (e.g. when a @trigger was on a host binding that had *ngIf)\n        var /** @type {?} */ enterNodesWithoutAnimations = new Set();\n        for (var /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n            var /** @type {?} */ element = allEnterNodes[i];\n            if (!subTimelines.has(element)) {\n                enterNodesWithoutAnimations.add(element);\n            }\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        var /** @type {?} */ sortedParentElements = [];\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                sortedParentElements.unshift(element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) {\n                getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n                prevPlayer.destroy();\n            });\n        });\n        // this is a special case for nodes that will be removed (either by)\n        // having their own leave animations or by being queried in a container\n        // that will be removed once a parent animation is complete. The idea\n        // here is that * styles must be identical to ! styles because of\n        // backwards compatibility (* is also filled in by default in many places).\n        // Otherwise * styles will return an empty value or auto since the element\n        // that is being getComputedStyle'd will not be visible (since * = destination)\n        var /** @type {?} */ replaceNodes = allLeaveNodes.filter(function (node) {\n            return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n        });\n        // POST STAGE: fill the * styles\n        var _a = cloakAndComputeStyles(this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE), postStylesMap = _a[0], allLeaveQueriedNodes = _a[1];\n        allLeaveQueriedNodes.forEach(function (node) {\n            if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n                replaceNodes.push(node);\n            }\n        });\n        // PRE STAGE: fill the ! styles\n        var preStylesMap = (allPreStyleElements.size ?\n            cloakAndComputeStyles(this.driver, enterNodesWithoutAnimations, allPreStyleElements, ɵPRE_STYLE) :\n            [new Map()])[0];\n        replaceNodes.forEach(function (node) {\n            var /** @type {?} */ post = postStylesMap.get(node);\n            var /** @type {?} */ pre = preStylesMap.get(node);\n            postStylesMap.set(node, /** @type {?} */ (Object.assign({}, post, pre)));\n        });\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                    return;\n                }\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                var /** @type {?} */ parentHasPriority = null;\n                for (var /** @type {?} */ i = 0; i < sortedParentElements.length; i++) {\n                    var /** @type {?} */ parent = sortedParentElements[i];\n                    if (parent === element)\n                        break;\n                    if (_this.driver.containsElement(parent, element)) {\n                        parentHasPriority = parent;\n                        break;\n                    }\n                }\n                if (parentHasPriority) {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentHasPriority);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n                else {\n                    rootPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                // there still might be a ancestor player animating this\n                // element therefore we will still add it as a sub player\n                // even if its animation may be disabled\n                subPlayers.push(player);\n                if (disabledElementsSet.has(element)) {\n                    skippedPlayers.push(player);\n                }\n            }\n        });\n        // find all of the sub players' corresponding inner animation player\n        subPlayers.forEach(function (player) {\n            // even if any players are not found for a sub animation then it\n            // will still complete itself after the next tick since it's Noop\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.parentPlayer.onDestroy(function () { return player.destroy(); });\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i = 0; i < allLeaveNodes.length; i++) {\n            var /** @type {?} */ element = allLeaveNodes[i];\n            var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n            removeClass(element, LEAVE_CLASSNAME);\n            // this means the element has a removal animation that is being\n            // taken care of and therefore the inner elements will hang around\n            // until that animation is over (or the parent queried animation)\n            if (details && details.hasAnimation)\n                continue;\n            var /** @type {?} */ players = [];\n            // if this element is queried or if it contains queried children\n            // then we want for the element not to be removed from the page\n            // until the queried animations have finished\n            if (queriedElements.size) {\n                var /** @type {?} */ queriedPlayerResults = queriedElements.get(element);\n                if (queriedPlayerResults && queriedPlayerResults.length) {\n                    players.push.apply(players, queriedPlayerResults);\n                }\n                var /** @type {?} */ queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n                for (var /** @type {?} */ j = 0; j < queriedInnerElements.length; j++) {\n                    var /** @type {?} */ queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n                    if (queriedPlayers && queriedPlayers.length) {\n                        players.push.apply(players, queriedPlayers);\n                    }\n                }\n            }\n            var /** @type {?} */ activePlayers = players.filter(function (p) { return !p.destroyed; });\n            if (activePlayers.length) {\n                removeNodesAfterAnimationDone(this, element, activePlayers);\n            }\n            else {\n                this.processLeaveNode(element);\n            }\n        }\n        // this is required so the cleanup method doesn't remove them\n        allLeaveNodes.length = 0;\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = function (namespaceId, instruction, allPreviousPlayersMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                player.destroy();\n                players.push(player);\n            });\n        });\n        // this needs to be done so that the PRE/POST styles can be\n        // computed properly without interfering with the previous animation\n        eraseStyles(rootElement, instruction.fromStyles);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            allConsumedElements.add(element);\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer();\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                .map(function (p) { return p.getRealPlayer(); }))\n                .filter(function (p) {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                var /** @type {?} */ pp = (p);\n                return pp.element ? pp.element === element : false;\n            });\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { return deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer();\n    };\n    return TransitionAnimationEngine;\n}());\nvar TransitionAnimationPlayer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} triggerName\n     * @param {?} element\n     */\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new NoopAnimationPlayer();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this._destroyed = false;\n        this.markedForDestroy = false;\n    }\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"queued\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._containsRealPlayer == false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = function () { return this._player; };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = function () {\n        this._destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = function () { return this.queued ? 0 : this._player.getPosition(); };\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player.totalTime; },\n        enumerable: true,\n        configurable: true\n    });\n    return TransitionAnimationPlayer;\n}());\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    // we use `!= null` here because it's the most simple\n    // way to test against a \"falsy\" value without mixing\n    // in empty strings or a zero value. DO NOT OPTIMIZE.\n    return value != null ? value : null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = [];\n    elements.forEach(function (element) { return cloakVals.push(cloakElement(element)); });\n    var /** @type {?} */ valuesMap = new Map();\n    var /** @type {?} */ failedElements = [];\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n                failedElements.push(element);\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    // we use a index variable here since Set.forEach(a, i) does not return\n    // an index value for the closure (but instead just the value)\n    var /** @type {?} */ i = 0;\n    elements.forEach(function (element) { return cloakElement(element, cloakVals[i++]); });\n    return [valuesMap, failedElements];\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction createIsRootFilterFn(nodes) {\n    var /** @type {?} */ nodeSet = new Set(nodes);\n    var /** @type {?} */ knownRootContainer = new Set();\n    var /** @type {?} */ isRoot;\n    isRoot = function (node) {\n        if (!node)\n            return true;\n        if (nodeSet.has(node.parentNode))\n            return false;\n        if (knownRootContainer.has(node.parentNode))\n            return true;\n        if (isRoot(node.parentNode)) {\n            knownRootContainer.add(node);\n            return true;\n        }\n        return false;\n    };\n    return isRoot;\n}\nvar CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction containsClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        return classes && classes[className];\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction flattenGroupPlayers(players) {\n    var /** @type {?} */ finalPlayers = [];\n    _flattenGroupPlayersRecur(players, finalPlayers);\n    return finalPlayers;\n}\n/**\n * @param {?} players\n * @param {?} finalPlayers\n * @return {?}\n */\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n    for (var /** @type {?} */ i = 0; i < players.length; i++) {\n        var /** @type {?} */ player = players[i];\n        if (player instanceof ɵAnimationGroupPlayer) {\n            _flattenGroupPlayersRecur(player.players, finalPlayers);\n        }\n        else {\n            finalPlayers.push(/** @type {?} */ (player));\n        }\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction objEquals(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        var /** @type {?} */ prop = k1[i];\n        if (!b.hasOwnProperty(prop) || a[prop] !== b[prop])\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} element\n * @param {?} allPreStyleElements\n * @param {?} allPostStyleElements\n * @return {?}\n */\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n    var /** @type {?} */ postEntry = allPostStyleElements.get(element);\n    if (!postEntry)\n        return false;\n    var /** @type {?} */ preEntry = allPreStyleElements.get(element);\n    if (preEntry) {\n        postEntry.forEach(function (data) { return ((preEntry)).add(data); });\n    }\n    else {\n        allPreStyleElements.set(element, postEntry);\n    }\n    allPostStyleElements.delete(element);\n    return true;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function AnimationEngine(driver, normalizer) {\n        var _this = this;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(driver, normalizer);\n        this._transitionEngine.onRemovalComplete = function (element, context) { return _this.onRemovalComplete(element, context); };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = (buildAnimationAst(/** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} element\n     * @param {?} disable\n     * @return {?}\n     */\n    AnimationEngine.prototype.disableAnimations = function (element, disable) {\n        this._transitionEngine.markElementAsDisabled(element, disable);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.process = function (namespaceId, element, property, value) {\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = (value);\n            this._timelineEngine.command(id, element, action, args);\n        }\n        else {\n            this._transitionEngine.trigger(namespaceId, element, property, value);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsPlayer = (function () {\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @param {?=} previousPlayers\n     */\n    function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var _this = this;\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this.previousPlayers = previousPlayers;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.previousStyles = {};\n        this.currentSnapshot = {};\n        this._duration = options['duration'];\n        this._delay = options['delay'] || 0;\n        this.time = this._duration + this._delay;\n        if (allowPreviousPlayerStylesMerge(this._duration, this._delay)) {\n            previousPlayers.forEach(function (player) {\n                var styles = player.currentSnapshot;\n                Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes.map(function (styles) { return copyStyles(styles, false); });\n        var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n        if (previousStyleProps.length) {\n            var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n            var /** @type {?} */ missingStyleProps_1 = [];\n            previousStyleProps.forEach(function (prop) {\n                if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                    missingStyleProps_1.push(prop);\n                }\n                startingKeyframe_1[prop] = _this.previousStyles[prop];\n            });\n            if (missingStyleProps_1.length) {\n                var /** @type {?} */ self_1 = this;\n                var _loop_1 = function () {\n                    var /** @type {?} */ kf = keyframes[i];\n                    missingStyleProps_1.forEach(function (prop) {\n                        kf[prop] = _computeStyle(self_1.element, prop);\n                    });\n                };\n                // tslint:disable-next-line\n                for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                    _loop_1();\n                }\n            }\n        }\n        this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this._player.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this._player.pause();\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return (element['animate'](keyframes, options));\n    };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this._player.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = function () {\n        this.init();\n        this._player.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = function () {\n        this.init();\n        this._onFinish();\n        this._player.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n        if (this._player) {\n            this._player.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    return WebAnimationsPlayer;\n}());\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element, prop) {\n    return ((window.getComputedStyle(element)))[prop];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsDriver = (function () {\n    function WebAnimationsDriver() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return (((window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousWebAnimationPlayers = (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n    };\n    return WebAnimationsDriver;\n}());\n/**\n * @return {?}\n */\nfunction supportsWebAnimations() {\n    return typeof Element !== 'undefined' && typeof ((Element)).prototype['animate'] === 'function';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AnimationDriver, Animation as ɵAnimation, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, NoopAnimationDriver as ɵNoopAnimationDriver, AnimationEngine as ɵAnimationEngine, WebAnimationsDriver as ɵWebAnimationsDriver, supportsWebAnimations as ɵsupportsWebAnimations, WebAnimationsPlayer as ɵWebAnimationsPlayer };\n//# sourceMappingURL=browser.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/animations/@angular/animations/browser.es5.js\n// module id = 564\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Root component of the app.\n */\n\nimport { Component, ElementRef } from '@angular/core';\n\nimport { ConfigService } from './core/config.service';\nimport { Station } from './shared/models/station.model';\n\nimport '../style/main.scss';\n\n@Component({\n  selector: 'htf-app',\n  template: require('./app.component.html'),\n  styles: [require('./app.component.scss')],\n})\nexport class AppComponent {\n  selectedStation: Station|null = null;\n\n  constructor(configService: ConfigService, ref: ElementRef) {\n    // We can't access the config as an Angular input property because it is on\n    // the root element, so access it as an attribute instead.\n    const configString = ref.nativeElement.getAttribute('config');\n\n    let config: {};\n    try {\n      config = JSON.parse(configString);\n    } catch (e) {\n      // This is expected to occur when running off of the devserver.\n      console.debug('Could not parse config, falling back to defaults.');\n      configService.initialize({});\n      return;\n    }\n\n    configService.initialize(config);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/app.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<htf-flash-messages></htf-flash-messages>\\n\\n<div class=\\\"htf-layout-nav-container\\\">\\n  <div class=\\\"htf-layout-nav\\\">\\n    <h1>OpenHTF</h1>\\n    <h2>Hardware Testing Framework.</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"htf-layout-container\\\">\\n  <htf-station-list\\n    [selectedStation]=\\\"selectedStation\\\"\\n    [style.display]=\\\"selectedStation === null ? 'initial' : 'none'\\\"\\n    (onSelectStation)=\\\"selectedStation = $event.station\\\">\\n  </htf-station-list>\\n\\n  <htf-station\\n    *ngIf=\\\"selectedStation !== null\\\"\\n    [selectedStation]=\\\"selectedStation\\\"\\n    (onDeselectStation)=\\\"selectedStation = null\\\">\\n  </htf-station>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 567\n// module chunks = 1","module.exports = \"h1{color:#323232;font-size:20px;margin:0}h2{color:#949a9f;font-size:12px;margin-left:5px}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 568\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Contains classes used exactly once application-wide, used by the root module.\n *\n * See https://angular.io/docs/ts/latest/guide/ngmodule.html for more info\n * about modules in Angular.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { ConfigService } from './config.service';\nimport { FlashMessageService } from './flash-message.service';\nimport { FlashMessagesComponent, FlashMessageTypeToClass } from './flash-messages.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    FlashMessagesComponent,\n    FlashMessageTypeToClass,\n  ],\n  providers: [\n    ConfigService,\n    FlashMessageService,\n  ],\n  exports: [CommonModule, FlashMessagesComponent],\n})\nexport class CoreModule {\n  // Prevent re-import of the CoreModule.\n  // From:\n  // https://angular.io/docs/ts/latest/guide/ngmodule.html#prevent-reimport\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n          'CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/core/core.module.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component displaying messages created by the FlashMessageService.\n */\n\nimport { Component, Pipe, PipeTransform } from '@angular/core';\n\nimport { FlashMessage, FlashMessageType } from './flash-message.model';\nimport { FlashMessageService } from './flash-message.service';\n\n// We use the ng- prefix to indicate CSS classes that are added dynamically.\nconst typeToCssClass = {\n  [FlashMessageType.error]: 'ng-flash-message-error',\n  [FlashMessageType.warn]: 'ng-flash-message-warn',\n};\n\n@Pipe({name: 'flashMessageTypeToClass'})\nexport class FlashMessageTypeToClass implements PipeTransform {\n  transform(type: FlashMessageType): string {\n    return typeToCssClass[type];\n  }\n}\n\n@Component({\n  selector: 'htf-flash-messages',\n  template: require('./flash-messages.component.html'),\n  styles: [require('./flash-messages.component.scss')],\n})\nexport class FlashMessagesComponent {\n  constructor(private flashMessage: FlashMessageService) {}\n\n  get message() {\n    if (this.flashMessage.messages.length > 0) {\n      return this.flashMessage.messages[0];\n    }\n  }\n\n  dismiss() {\n    this.flashMessage.dismissEarly();\n  }\n\n  onMouseEnter(message: FlashMessage) {\n    this.flashMessage.cancelDismissal();\n    message.showTooltip = message.hasTooltip;\n  }\n\n  onMouseExit(message: FlashMessage) {\n    this.flashMessage.startDismissal();\n    message.showTooltip = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/core/flash-messages.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div *ngIf=\\\"message\\\">\\n  <div\\n    class=\\\"flash-message\\\"\\n    [class.flash-message--has-tooltip]=\\\"message.hasTooltip\\\"\\n    [class.flash-message--is-dismissed]=\\\"message.isDismissed\\\"\\n    [ngClass]=\\\"message.type | flashMessageTypeToClass\\\"\\n    (mouseenter)=\\\"onMouseEnter(message)\\\"\\n    (mouseleave)=\\\"onMouseExit(message)\\\">\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"flash-message-dismissal-button\\\"\\n      (click)=\\\"dismiss()\\\">\\n      X\\n    </button>\\n    {{ message.content }}\\n  </div>\\n\\n  <!-- Avoid whitespace since flash-message-tooltip uses white-space: pre -->\\n  <div\\n    [class.flash-message-tooltip--is-visible]=\\\"message.showTooltip\\\"\\n    class=\\\"flash-message-tooltip\\\">{{ message.tooltip }}</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/flash-messages.component.html\n// module id = 571\n// module chunks = 1","module.exports = \"@keyframes flash-message-enter{0%{top:-32px}100%{top:0}}@keyframes flash-message-exit{0%{top:0}100%{top:-32px}}.flash-message{animation:flash-message-enter 400ms forwards;border-bottom-left-radius:10px;border-bottom-right-radius:10px;height:32px;left:50%;line-height:31px;min-width:400px;opacity:.9;padding:0 20px;position:fixed;text-align:center;top:0;transform:translateX(-50%);white-space:nowrap;z-index:2}.flash-message.flash-message--has-tooltip{cursor:pointer}.flash-message.flash-message--is-dismissed{animation:flash-message-exit 400ms forwards}.flash-message.ng-flash-message-error{background:#ff5d4e;color:#fff}.flash-message.ng-flash-message-warn{background:#ffe54d;color:#323232}.flash-message-tooltip{background:rgba(0,0,0,.7);border-radius:3px;color:#fff;font-size:12px;left:50%;line-height:initial;max-width:500px;opacity:0;padding:10px;position:fixed;text-align:left;top:40px;transform:translateX(-50%);transition:200ms ease opacity;white-space:pre-wrap;word-wrap:break-word;z-index:2}.flash-message-tooltip.flash-message-tooltip--is-visible{opacity:1}.flash-message-dismissal-button{-webkit-appearance:initial;background:rgba(0,0,0,0);border:0;padding:0;border-radius:50%;border:1px solid #fff;color:inherit;display:inline-block;float:left;font-size:11px;height:18px;left:-6px;padding-left:1px;position:relative;top:6px;width:18px}.flash-message-dismissal-button:focus,.flash-message-dismissal-button:active{outline:none}.flash-message.ng-flash-message-warn .flash-message-dismissal-button{border-color:#323232}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/core/flash-messages.component.scss\n// module id = 572\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Displays the elapsed time since the start of a test or phase.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Phase } from './models/phase.model';\nimport { TestState } from './models/test-state.model';\nimport { TimeService } from './time.service';\n\n@Pipe({\n  name: 'elapsedTime',\n  pure: false,\n})\nexport class ElapsedTimePipe implements PipeTransform {\n  constructor(private time: TimeService) {}\n\n  transform(obj: Phase|TestState, format = '%s'): string {\n    return format.replace('%s', this.getElapsedTimeString(obj));\n  }\n\n  getElapsedTimeString(obj: Phase|TestState) {\n    if (this.time.last === null) {\n      return '0s';\n    }\n    const endTimeMs = obj.endTimeMillis || this.time.last;\n    const elapsedSeconds = Math.round((endTimeMs - obj.startTimeMillis) / 1000);\n    const elapsedMinutes = Math.floor(elapsedSeconds / 60);\n    if (elapsedMinutes === 0) {\n      return `${elapsedSeconds}s`;\n    }\n    const seconds = elapsedSeconds - 60 * elapsedMinutes;\n    const elapsedHours = Math.floor(elapsedMinutes / 60);\n    if (elapsedHours === 0) {\n      return `${elapsedMinutes}m ${seconds}s`;\n    }\n    const minutes = elapsedMinutes - 60 * elapsedHours;\n    return `${elapsedHours}h ${minutes}m ${seconds}s`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/elapsed-time.pipe.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\n@Directive({\n  selector: '[htfFocus]',\n})\nexport class FocusDirective implements OnChanges {\n  @Input('htfFocus') focusOn: boolean;\n\n  constructor(private ref: ElementRef) {}\n\n  ngOnChanges() {\n    if (this.focusOn) {\n      this.ref.nativeElement.focus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/focus.directive.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Recursive component representing a node in a genealogy tree.\n */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { GenealogyTreeNode } from './genealogy.model';\n\n@Component({\n  selector: 'htf-genealogy-node',\n  template: require('./genealogy-node.component.html'),\n  styles: [require('./genealogy-node.component.scss')],\n})\nexport class GenealogyNodeComponent implements OnInit {\n  @Input() isFirst: boolean;\n  @Input() isRoot: boolean;\n  @Input() node: GenealogyTreeNode;\n  @Input() maxDepth: number|null;\n  childMaxDepth: number|null;\n\n  ngOnInit() {\n    if (this.maxDepth === null) {\n      this.childMaxDepth = null;\n    } else {\n      this.childMaxDepth = this.maxDepth - 1;\n    }\n\n    // Assume isRoot is true unless specified false.\n    if (typeof this.isRoot === 'undefined') {\n      this.isRoot = true;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/genealogy-node.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"component-info\\\" [class.is-first]=\\\"isFirst\\\" [class.is-root]=\\\"isRoot\\\">\\n  <span class=\\\"serial-number\\\">{{ node.component.serial }}</span>\\n  <span *ngIf=\\\"node.component.instance_name\\\">{{ node.component.instance_name }}</span>\\n  <span *ngIf=\\\"node.component.part_number\\\">({{ node.component.part_number }})</span>\\n</div>\\n\\n<ul *ngIf=\\\"node.children && node.children.length > 0 && maxDepth !== 0\\\">\\n  <li *ngFor=\\\"let child of node.children; let isFirst=first\\\">\\n    <htf-genealogy-node\\n      [isFirst]=\\\"isFirst\\\"\\n      [isRoot]=\\\"false\\\"\\n      [node]=\\\"child\\\"\\n      [maxDepth]=\\\"childMaxDepth\\\">\\n    </htf-genealogy-node>\\n  </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/genealogy-node.component.html\n// module id = 576\n// module chunks = 1","module.exports = \".component-info{border:1px solid #323232;display:inline-block;margin-bottom:10px;padding:5px;position:relative}.component-info:not(.is-root)::before{border-bottom:1px solid #323232;border-left:1px solid #323232;content:\\\"\\\";height:calc(100% + 11px);left:-21px;position:absolute;top:calc(-50% - 11px);width:20px}.component-info:not(.is-root).is-first::before{height:calc(50% + 11px);top:-11px}ul{list-style:none;margin:0;padding:0;padding-left:40px}.serial-number{font-weight:bold}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/genealogy-node.component.scss\n// module id = 577\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { logLevels } from './models/log-record.model';\n\n@Pipe({name: 'logLevelToClass'})\nexport class LogLevelToClassPipe implements PipeTransform {\n  transform(level: number): string {\n    if (!level) {\n      return;\n    }\n    if (level <= logLevels.debug) {\n      return 'ng-log-level-debug';\n    }\n    if (level <= logLevels.info) {\n      return 'ng-log-level-info';\n    }\n    if (level <= logLevels.warning) {\n      return 'ng-log-level-warning';\n    }\n    if (level <= logLevels.error) {\n      return 'ng-log-level-error';\n    }\n    return 'ng-log-level-critical';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/log-level-to-class.pipe.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Pipe which returns the values of an object, sorted by key.\n *\n * This helps us to iterate over objects in templates using ngFor.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'objectToSortedValues',\n  // Marking this pipe impure means it will be called on every change detection\n  // cycle. Be careful about using this with anything other than small objects.\n  pure: false,\n})\nexport class ObjectToSortedValuesPipe implements PipeTransform {\n  transform(object: {}, sortBy: string|null = null) {\n    const asArray = [];\n    const keys = Object.keys(object);\n    // Sort by key if sortBy is not defined.\n    if (sortBy === null) {\n      keys.sort();\n    }\n    for (const key of keys) {\n      asArray.push(object[key]);\n    }\n    // Sort the values by sortBy if it is defined.\n    if (sortBy !== null) {\n      asArray.sort((a, b) => {\n        if (a[sortBy] < b[sortBy]) {\n          return -1;\n        } else if (a[sortBy] > b[sortBy]) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    return asArray;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/object-to-sorted-values.pipe.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"outer\\\" [class.is-complete]=\\\"isComplete\\\">\\n  <div class=\\\"inner-wrapper\\\">\\n    <div class=\\\"inner\\\" [ngStyle]=\\\"barStyle\\\">\\n      <div class=\\\"stripes\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/progress-bar.component.html\n// module id = 580\n// module chunks = 1","module.exports = \".outer{height:100%;width:100%;background:#e5e5e5;border-radius:3px;overflow:hidden}.outer.is-complete{animation:htf-progress-bar-pulse 2s infinite}.inner-wrapper{height:100%;left:-10px;position:relative;width:calc(100% + 20px)}.inner{background:rgba(0,119,255,.8);height:100%;transition:width .4s ease;transform:skewX(-30deg)}.stripes{transform:skewX(45deg);height:100%;width:100%;background-image:linear-gradient(-45deg, rgba(255, 255, 255, 0.08) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.08) 50%, rgba(255, 255, 255, 0.08) 75%, transparent 75%, transparent);background-size:50px 50px;animation:move 4s linear infinite}@keyframes htf-progress-bar-pulse{0%{box-shadow:0 0 0 0 rgba(0,119,255,.25)}70%{box-shadow:0 0 0 8px rgba(0,119,255,0)}100%{box-shadow:0 0 0 0 rgba(0,119,255,0)}}@keyframes move{0%{background-position:0 0}100%{background-position:50px 50px}}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/progress-bar.component.scss\n// module id = 581\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tools for rendering test and phase status information.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { MeasurementStatus } from './models/measurement.model';\nimport { PhaseStatus } from './models/phase.model';\nimport { StationStatus } from './models/station.model';\nimport { TestStatus } from './models/test-state.model';\n\nenum StatusCategory {\n  fail,\n  online,\n  pass,\n  pending,\n  running,\n  unreachable,\n  warning,\n}\n\n// We use the ng- prefix to indicate CSS classes that are added dynamically.\nconst categoryToCssClass = {\n  [StatusCategory.fail]: 'ng-status-fail',\n  [StatusCategory.online]: 'ng-status-online',\n  [StatusCategory.pass]: 'ng-status-pass',\n  [StatusCategory.pending]: 'ng-status-pending',\n  [StatusCategory.running]: 'ng-status-running',\n  [StatusCategory.unreachable]: 'ng-status-unreachable',\n  [StatusCategory.warning]: 'ng-status-warning',\n};\n\nconst unknownStatus = Symbol('unknownStatus');\n\nexport type AnyStatus =\n    MeasurementStatus | PhaseStatus | StationStatus | TestStatus;\n\nconst statusToCategory = {\n  [MeasurementStatus.unset]: StatusCategory.pending,\n  [MeasurementStatus.pass]: StatusCategory.pass,\n  [MeasurementStatus.fail]: StatusCategory.fail,\n  [PhaseStatus.waiting]: StatusCategory.pending,\n  [PhaseStatus.running]: StatusCategory.running,\n  [PhaseStatus.pass]: StatusCategory.pass,\n  [PhaseStatus.fail]: StatusCategory.fail,\n  [PhaseStatus.skip]: StatusCategory.unreachable,\n  [PhaseStatus.error]: StatusCategory.warning,\n  [StationStatus.online]: StatusCategory.online,\n  [StationStatus.unreachable]: StatusCategory.unreachable,\n  [TestStatus.waiting]: StatusCategory.pending,\n  [TestStatus.running]: StatusCategory.running,\n  [TestStatus.pass]: StatusCategory.pass,\n  [TestStatus.fail]: StatusCategory.fail,\n  [TestStatus.error]: StatusCategory.warning,\n  [TestStatus.timeout]: StatusCategory.warning,\n  [TestStatus.aborted]: StatusCategory.warning,\n  [unknownStatus]: StatusCategory.warning,\n};\n\nconst statusToText = {\n  [MeasurementStatus.unset]: 'Unset',\n  [MeasurementStatus.pass]: 'Pass',\n  [MeasurementStatus.fail]: 'Fail',\n  [PhaseStatus.waiting]: 'Waiting',\n  [PhaseStatus.running]: 'Running',\n  [PhaseStatus.pass]: 'Pass',\n  [PhaseStatus.fail]: 'Fail',\n  [PhaseStatus.skip]: 'Skip',\n  [PhaseStatus.error]: 'Error',\n  [StationStatus.online]: 'Online',\n  [StationStatus.unreachable]: 'Unreachable',\n  [TestStatus.waiting]: 'Waiting',\n  [TestStatus.running]: 'Running',\n  [TestStatus.pass]: 'Pass',\n  [TestStatus.fail]: 'Fail',\n  [TestStatus.error]: 'Error',\n  [TestStatus.timeout]: 'Timeout',\n  [TestStatus.aborted]: 'Aborted',\n  [unknownStatus]: 'Unknown',\n};\n\n@Pipe({name: 'statusToClass'})\nexport class StatusToClassPipe implements PipeTransform {\n  transform(input: AnyStatus): string {\n    if (!(input in statusToCategory)) {\n      console.error(`Unknown status \"${input}\".`);\n      return categoryToCssClass[statusToCategory[unknownStatus]];\n    }\n    return categoryToCssClass[statusToCategory[input]];\n  }\n}\n\n@Pipe({name: 'statusToText'})\nexport class StatusToTextPipe implements PipeTransform {\n  transform(input: AnyStatus): string {\n    if (!(input in statusToCategory)) {\n      console.error(`Unknown status \"${input}\".`);\n      return statusToText[unknownStatus];\n    }\n    return statusToText[input];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/status-pipes.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Displays how long ago a given time was.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { format } from 'timeago.js';\n\n@Pipe({\n  name: 'timeAgo',\n  pure: false,\n})\nexport class TimeAgoPipe implements PipeTransform {\n  transform(value: number): string {\n    return format(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/time-ago.pipe.ts","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/index.js\n// module id = 584\n// module chunks = 1","var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/lang/en_US.js\n// module id = 585\n// module chunks = 1","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/lang/zh_CN.js\n// module id = 586\n// module chunks = 1","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/format.js\n// module id = 587\n// module chunks = 1","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n//# sourceMappingURL=realtime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/realtime.js\n// module id = 588\n// module chunks = 1","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n//# sourceMappingURL=dom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/utils/dom.js\n// module id = 589\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[htfTooltip]',\n})\nexport class TooltipDirective implements OnInit {\n  @Input('htfTooltip') text: string;\n\n  private tooltipElement: HTMLDivElement;\n\n  constructor(private ref: ElementRef) {}\n\n  ngOnInit() {\n    if (this.text.length === 0) {\n      return;\n    }\n    this.tooltipElement = document.createElement('div');\n    this.tooltipElement.innerHTML = this.text;\n    this.tooltipElement.classList.add('ng-tooltip');\n    const element = this.ref.nativeElement;\n    element.classList.add('ng-tooltip-host');\n    element.insertBefore(this.tooltipElement, element.firstChild);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    if (this.text.length > 0) {\n      this.tooltipElement.classList.add('ng-tooltip--is-visible');\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    if (this.text.length > 0) {\n      this.tooltipElement.classList.remove('ng-tooltip--is-visible');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/tooltip.directive.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Text element whose length can be limited with expand/collapse functionality.\n */\n\nimport { Component, Input } from '@angular/core';\n\nconst ellipsis = '…';\nconst template = `\n  {{ trimmedContent }}\n  <button *ngIf=\"buttonLabel !== null\" type=\"button\" class=\"htf-link-button\"\n          (click)=\"onClick()\">\n    {{ buttonLabel }}\n  </button>\n`;\n\n@Component({\n  selector: 'htf-trimmed-text',\n  template,\n})\nexport class TrimmedTextComponent {\n  @Input() maxChars: number;\n  @Input() content: string|null|undefined;\n\n  private expanded = false;\n\n  get buttonLabel() {\n    if (!this.content || this.content.length <= this.maxChars) {\n      return null;\n    }\n    return this.expanded ? 'collapse' : 'expand';\n  }\n\n  get trimmedContent() {\n    if (!this.content || this.expanded ||\n        this.content.length <= this.maxChars) {\n      return this.content;\n    }\n    return this.content.slice(0, this.maxChars - ellipsis.length) + ellipsis;\n  }\n\n  onClick() {\n    this.expanded = !this.expanded;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/trimmed-text.component.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component representing the UserInput plug.\n */\n\nimport {trigger} from '@angular/animations';\nimport {Component, ElementRef} from '@angular/core';\nimport {Http} from '@angular/http';\n\nimport {ConfigService} from '../core/config.service';\nimport {FlashMessageService} from '../core/flash-message.service';\nimport {washIn} from '../shared/animations';\n\nimport {BasePlug} from './base-plug';\n\nconst PLUG_NAME = 'openhtf.plugs.user_input.UserInput';\n\n/**\n * @param default: the default prompt string for element.\n * @param error: the error message for element.\n * @param id: the identifier for the element.\n * @param message: the message to display to the operator.\n * @param text-input: the text input provided by the operator.\n * @param image-url: url to embedded image in the element.\n */\nexport declare interface UserInputPlugState {\n  default?: string;  // Used by ui_plugs.advanced_user_input.AdvancedUserInput.\n  error?: string;    // Used by ui_plugs.advanced_user_input.AdvancedUserInput.\n  id: string;\n  message: string;\n  'text-input': string;\n  'image-url': string;\n}\n\n/**\n * @param lastPromptId: identifier of last prompt.\n * @param lastPromptHtml: html contents of last prompt.\n */\n@Component({\n  animations: [trigger('animateIn', washIn)],\n  selector: 'htf-user-input-plug',\n  template: require('./user-input-plug.component.html'),\n  styles: [require('./user-input-plug.component.scss')],\n})\nexport class UserInputPlugComponent extends BasePlug {\n  private lastPromptId: string;\n  private lastPromptHtml: string;\n\n  constructor(\n      config: ConfigService, http: Http, flashMessage: FlashMessageService,\n      private ref: ElementRef) {\n    super(PLUG_NAME, config, http, flashMessage);\n  }\n\n  get error() {\n    return this.getPlugState().error;\n  }\n\n  get prompt() {\n    const state = this.getPlugState();\n    // Run this when a new prompt is set.\n    if (this.lastPromptId !== state.id) {\n      this.lastPromptId = state.id;\n      const convertedHtml =\n          state.message.replace(/&#10;/g, '<br>');  // Convert newlines.\n      this.lastPromptHtml = convertedHtml;\n      this.focusSelf();\n      if (state.default) {\n        this.setResponse(state.default);\n      }\n    }\n    return this.lastPromptHtml;\n  }\n\n  hasTextInput() {\n    return this.getPlugState()['text-input'];\n  }\n\n  hasImage() {\n    return this.getPlugState()['image-url'];\n  }\n\n  get Image_URL() {\n    return this.getPlugState()['image-url'];\n  }\n\n  sendResponse(input: HTMLInputElement) {\n    const promptId = this.getPlugState().id;\n    let response: string;\n    if (this.hasTextInput()) {\n      response = input.value;\n      input.value = '';\n    } else {\n      response = '';\n    }\n    this.respond('respond', [promptId, response]);\n  }\n\n  protected getPlugState() {\n    return super.getPlugState() as UserInputPlugState;\n  }\n\n  private focusSelf() {\n    const input = this.ref.nativeElement.querySelector('input');\n    if (input) {\n      input.focus();\n    }\n  }\n\n  private setResponse(response) {\n    const input = this.ref.nativeElement.querySelector('input');\n    if (input) {\n      input.value = response;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/plugs/user-input-plug.component.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base class for plug components.\n */\n\nimport { Input } from '@angular/core';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\n\nimport { ConfigService } from '../core/config.service';\nimport { FlashMessageService } from '../core/flash-message.service';\nimport { TestState } from '../shared/models/test-state.model';\nimport { messageFromErrorResponse } from '../shared/util';\nimport { getTestBaseUrl } from '../shared/util';\n\nexport abstract class BasePlug {\n  @Input() test: TestState;\n\n  // The plug name is a class name, or, if the plug is a subclass of another\n  // plug, a comma-separated list of class names.\n  //\n  // For example:\n  //     `openhtf.plugs.user_input.UserInput`\n  // Or:\n  //     `openhtf.plugs.user_input.UserInput,\\\n  //         openhtf.plugs.user_input.AdvancedUserInput`\n  private plugName: string;\n\n  constructor(\n      private className: string, protected config: ConfigService,\n      protected http: Http, protected flashMessage: FlashMessageService) {}\n\n  plugExists(): boolean {\n    return Boolean(this.test && this.getPlugState());\n  }\n\n  protected respond(method: string, args: Array<{}>) {\n    const headers = new Headers({'Content-Type': 'application/json'});\n    const options = new RequestOptions({headers});\n    const testBaseUrl = getTestBaseUrl(this.config.dashboardEnabled, this.test);\n    const plugUrl = `${testBaseUrl}/plugs/${this.plugName}`;\n    const payload = JSON.stringify({method, args});\n\n    this.http.post(plugUrl, payload, options)\n        .subscribe(() => {}, (error: Response) => {\n          const tooltip = messageFromErrorResponse(error);\n          this.flashMessage.error(\n              `An error occurred trying to respond to ` +\n                  `plug ${this.plugName}.`,\n              tooltip);\n        });\n  }\n\n  protected getPlugState() {\n    // If we previously found an active matching plug, use that plug as long\n    // as it remains active (as long as the plug state is not null).\n    if (this.plugName && this.test.plugStates[this.plugName]) {\n      return this.test.plugStates[this.plugName];\n    }\n\n    // Find the first *active* plug (state is not null) whose MRO includes\n    // this.className.\n    for (const plugName of Object.keys(this.test.plugStates)) {\n      if (this.test.plugStates[plugName] &&\n          this.test.plugDescriptors[plugName].mro.indexOf(this.className) !==\n              -1) {\n        this.plugName = plugName;\n        return this.test.plugStates[plugName];\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/plugs/base-plug.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div\\n  class=\\\"htf-layout-widget\\\"\\n  *ngIf=\\\"plugExists()\\\">\\n\\n  <!-- Wrap contents in an extra div for the background color animation. -->\\n  <div [@animateIn]=\\\"'in'\\\">\\n\\n    <div class=\\\"htf-layout-widget-header\\\">\\n      <div>Operator input</div>\\n    </div>\\n\\n    <div class=\\\"htf-layout-widget-body\\\">\\n\\n      <img *ngIf=\\\"hasImage()\\\" [src]=\\\"Image_URL\\\" alt=\\\"user-input-image\\\" class=\\\"user-input-image\\\">\\n\\n      <div [innerHTML]=\\\"prompt\\\"></div>\\n\\n      <input\\n        #response_field\\n        [style.display]=\\\"hasTextInput() ? 'inline' : 'none'\\\"\\n        [class.user-input-has-error]=\\\"error\\\"\\n        type=\\\"text\\\"\\n        class=\\\"u-push-top\\\"\\n        (keyup.enter)=\\\"sendResponse(response_field)\\\">\\n\\n      <div class=\\\"user-input-error-text u-push-top-third\\\" *ngIf=\\\"error\\\">\\n        {{ error }}\\n      </div>\\n\\n      <div class=\\\"u-text-align-right\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"htf-rounded-button-grey u-push-top\\\"\\n          (click)=\\\"sendResponse(response_field)\\\">\\n          {{ hasTextInput() ? 'Submit' : 'Okay' }}\\n        </button>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/plugs/user-input-plug.component.html\n// module id = 594\n// module chunks = 1","module.exports = \":host ::ng-deep ol,:host ::ng-deep ul{padding-left:25px;margin:0}img.user-input-image{max-width:100%}.user-input-has-error{border-color:#ff5d4e}.user-input-has-error:focus{border-color:rgb(231,19.5762711864,0)}.user-input-error-text{color:#ff5d4e;font-size:12px}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/plugs/user-input-plug.component.scss\n// module id = 595\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Feature module for the main station views.\n *\n * See https://angular.io/docs/ts/latest/guide/ngmodule.html for more info\n * about modules in Angular.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlugsModule } from '../plugs/plugs.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { DashboardService } from './station-list/dashboard.service';\nimport { StationListComponent } from './station-list/station-list.component';\nimport { AttachmentsComponent } from './station/attachments.component';\nimport { HistoryComponent } from './station/history.component';\nimport { HistoryService } from './station/history.service';\nimport { LogsComponent } from './station/logs.component';\nimport { PhaseListComponent } from './station/phase-list.component';\nimport { PhaseComponent } from './station/phase.component';\nimport { StationComponent } from './station/station.component';\nimport { StationService } from './station/station.service';\nimport { TestSummaryComponent } from './station/test-summary.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PlugsModule,\n    SharedModule,\n  ],\n  declarations: [\n    StationListComponent,\n    AttachmentsComponent,\n    HistoryComponent,\n    LogsComponent,\n    PhaseComponent,\n    PhaseListComponent,\n    StationComponent,\n    TestSummaryComponent,\n  ],\n  providers: [\n    DashboardService,\n    HistoryService,\n    StationService,\n  ],\n  exports: [\n    CommonModule,\n    StationComponent,\n    StationListComponent,\n  ],\n})\nexport class StationsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/stations.module.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component displaying a list of known test stations.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { ConfigService } from '../../core/config.service';\nimport { Station, StationStatus } from '../../shared/models/station.model';\nimport { TimeService } from '../../shared/time.service';\n\nimport { DashboardService } from './dashboard.service';\n\nconst subscriptionRetryMs = 200;\nconst subscriptionRetryBackoff = 1.5;\nconst subscriptionRetryMax = 1500;\n\n// Emitted by the component when a new selection is made.\nexport class StationSelectedEvent {\n  constructor(public station: Station) {}\n}\n\n@Component({\n  selector: 'htf-station-list',\n  template: require('./station-list.component.html'),\n  styles: [require('./station-list.component.scss')],\n})\nexport class StationListComponent implements OnDestroy, OnInit {\n  @Input() selectedStation: Station|null;\n  @Output() onSelectStation = new EventEmitter<StationSelectedEvent>();\n\n  readonly retryCountdown = this.time.observable.map(currentMillis => {\n    const remainingMs = this.dashboard.retryTimeMs - currentMillis;\n    const remainingS = Math.round(remainingMs / 1000);\n    return `Retrying in ${remainingS}s.`;\n  });\n  readonly stations: {[hostPort: string]: Station};\n\n  constructor(\n      private dashboard: DashboardService, private time: TimeService,\n      config: ConfigService) {\n    this.stations = dashboard.stations;\n\n    // If the dashboard is disabled, select the station automatically.\n    if (!config.dashboardEnabled) {\n      const subscription = dashboard.messages.subscribe(() => {\n        for (const hostPort of Object.keys(this.stations)) {\n          this.select(this.stations[hostPort]);\n          // Cancel the subscription once a station has been seen.\n          subscription.unsubscribe();\n          break;\n        }\n      });\n    }\n  }\n\n  get anyStationFound() {\n    return Object.keys(this.stations).length > 0;\n  }\n\n  get hasError() {\n    return this.dashboard.hasError;\n  }\n\n  get isLoading() {\n    return this.dashboard.isSubscribing;\n  }\n\n  get stationCount() {\n    return Object.keys(this.stations).length;\n  }\n\n  ngOnInit() {\n    this.dashboard.subscribe(\n        subscriptionRetryMs, subscriptionRetryBackoff, subscriptionRetryMax);\n  }\n\n  ngOnDestroy() {\n    this.dashboard.unsubscribe();\n  }\n\n  isReachable(station: Station) {\n    return station.status !== StationStatus.unreachable;\n  }\n\n  select(station: Station) {\n    this.onSelectStation.emit(new StationSelectedEvent(station));\n  }\n\n  // After the stations have failed to load, force a retry.\n  manualRetry() {\n    this.dashboard.retryNow();\n  }\n\n  // After the stations have successfully loaded, force a refresh.\n  manualReload() {\n    this.dashboard.refresh();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station-list/station-list.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div *ngIf=\\\"!hasError\\\" class=\\\"nav-bar\\\">\\n  <em *ngIf=\\\"isLoading\\\">\\n    Loading…\\n  </em>\\n  <span *ngIf=\\\"!isLoading && !anyStationFound\\\">\\n    Connected to server. No stations found.\\n  </span>\\n  <span *ngIf=\\\"!isLoading && anyStationFound\\\">\\n    Found {{ stationCount }} {{ stationCount === 1 ? 'station' : 'stations' }}.\\n  </span>\\n\\n  <div class=\\\"u-flex-grow\\\"></div>\\n\\n  <button\\n    *ngIf=\\\"!isLoading\\\"\\n    (click)=\\\"manualReload()\\\"\\n    type=\\\"button\\\"\\n    class=\\\"htf-link-button\\\">\\n    Refresh station list\\n  </button>\\n</div>\\n\\n<ul class=\\\"station-list\\\" *ngIf=\\\"!isLoading && !hasError && anyStationFound\\\">\\n  <li *ngFor=\\\"let station of stations | objectToSortedValues:'label'\\\">\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"u-text-align-left\\\"\\n      [class.is-unreachable]=\\\"!isReachable(station)\\\"\\n      (click)=\\\"select(station)\\\">\\n\\n      <div class=\\\"u-display-flex\\\">\\n        <div class=\\\"station-label\\\">\\n          {{ station.label }} ({{ station.status | statusToText }})\\n        </div>\\n        <div class=\\\"u-flex-grow\\\"></div>\\n        <div class=\\\"htf-support-text\\\">\\n          {{ station.host }}:{{ station.port }}\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"station.testDescription\\\" class=\\\"station-description u-push-top-third\\\">\\n        {{ station.testDescription }}\\n      </div>\\n\\n    </button>\\n  </li>\\n</ul>\\n\\n<div *ngIf=\\\"hasError\\\">\\n  Could not connect to the server.\\n  {{ (retryCountdown | async) || 'Retrying in…' }}\\n  <button\\n    type=\\\"button\\\"\\n    class=\\\"htf-link-button\\\"\\n    (click)=\\\"manualRetry()\\\">\\n    Try again.\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station-list/station-list.component.html\n// module id = 598\n// module chunks = 1","module.exports = \".nav-bar{color:#949a9f;display:-ms-flexbox;display:flex;font-size:12px;margin-bottom:14px}.station-list{list-style:none;margin:0;padding:0}.station-list li{background:#fff;border-radius:3px;border:1px solid #ccc;margin-bottom:14px}.station-list li button{-webkit-appearance:initial;background:rgba(0,0,0,0);border:0;padding:0;box-shadow:inset 0 0 0 0 #07f;cursor:pointer;overflow:hidden;padding:15px 20px;text-overflow:ellipsis;transition:300ms ease box-shadow;white-space:nowrap;width:100%}.station-list li button:focus,.station-list li button:active{outline:none}.station-list li button:hover,.station-list li button:active{box-shadow:inset 0 -3px 0 0 #07f}.station-list li button:hover .station-label,.station-list li button:hover .station-description,.station-list li button:active .station-label,.station-list li button:active .station-description{color:#07f}.station-list li button:focus .station-label,.station-list li button:focus .station-description{color:#07f}.station-list li button.is-unreachable{color:#949a9f}.station-label{font-size:16px;transition:300ms ease color}.station-description{color:#949a9f;transition:300ms ease color}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station-list/station-list.component.scss\n// module id = 599\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying a test run's attachments.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ConfigService } from '../../core/config.service';\nimport { Attachment } from '../../shared/models/attachment.model';\nimport { TestState, TestStatus } from '../../shared/models/test-state.model';\nimport { getStationBaseUrl, getTestBaseUrl } from '../../shared/util';\n\n@Component({\n  selector: 'htf-attachments',\n  template: require('./attachments.component.html'),\n  styles: [require('./attachments.component.scss')],\n})\nexport class AttachmentsComponent {\n  @Input() test: TestState;\n\n  expanded = false;\n\n  constructor(private config: ConfigService) {}\n\n  linkForAttachment(attachment: Attachment) {\n    // Case 1: The test is currently running.\n    if (this.test.testId !== null && this.test.status === TestStatus.running) {\n      const testBaseUrl =\n          getTestBaseUrl(this.config.dashboardEnabled, this.test);\n      return (\n          `${testBaseUrl}/phases/${attachment.phaseDescriptorId}/attachments/` +\n          `${attachment.name}`);\n    }\n\n    // Case 2: We have a history record pointing to file on disk.\n    else if (this.test.fileName !== null) {\n      const stationBaseUrl =\n          getStationBaseUrl(this.config.dashboardEnabled, this.test.station);\n      return (\n          `${stationBaseUrl}/history/${this.test.fileName}/attachments/` +\n          `${attachment.name}?sha1=${attachment.sha1}`);\n    }\n\n    // Case 3: If the test is not running and we do not have a filename then we\n    // have no way of accessing attachments.\n    return null;\n  }\n\n  attachmentIsImage(attachment: Attachment) {\n    return attachment.mimeType.startsWith(\"image/\")\n  }\n\n  toggleExpanded() {\n    this.expanded = !this.expanded;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/attachments.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div *ngIf=\\\"test\\\" class=\\\"htf-layout-widget\\\">\\n\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>Attachments</div>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <button\\n      *ngIf=\\\"test.attachments.length > 0\\\"\\n      type=\\\"button\\\"\\n      class=\\\"htf-rounded-button-grey\\\"\\n      (click)=\\\"toggleExpanded()\\\">\\n      {{ expanded? 'Collapse' : 'Expand' }}\\n    </button>\\n  </div>\\n\\n  <div\\n    *ngIf=\\\"test.attachments.length === 0\\\"\\n    class=\\\"htf-layout-widget-body htf-support-text\\\">\\n    There are no attachments yet.\\n  </div>\\n\\n  <div\\n    *ngIf=\\\"!expanded && test.attachments.length > 0\\\"\\n    class=\\\"htf-layout-widget-body htf-support-text\\\">\\n    Expand to view\\n    {{ test.attachments.length }}\\n    {{ test.attachments.length === 1 ? 'attachment' : 'attachments' }}.\\n  </div>\\n\\n  <ul *ngIf=\\\"expanded && test.attachments.length > 0\\\">\\n    <li\\n      *ngFor=\\\"let attachment of test.attachments\\\"\\n      [ngSwitch]=\\\"linkForAttachment(attachment)\\\">\\n      <span *ngSwitchCase=\\\"null\\\">{{ attachment.name }}</span>\\n      <a\\n        *ngSwitchDefault\\n        [href]=\\\"linkForAttachment(attachment)\\\"\\n        target=\\\"_blank\\\">\\n        {{ attachment.name }}\\n      </a>\\n      <span class=\\\"htf-support-text\\\">&nbsp;{{ attachment.mimeType }}</span>\\n      <span class=\\\"u-flex-grow\\\"></span>\\n      <span class=\\\"htf-support-text\\\">From phase: {{ attachment.phaseName }}</span>\\n      <div>\\n      <img *ngIf=\\\"attachmentIsImage(attachment) && linkForAttachment(attachment)\\\" [src]=\\\"linkForAttachment(attachment)\\\"/>\\n      </div>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/attachments.component.html\n// module id = 601\n// module chunks = 1","module.exports = \"ul{list-style:none;margin:0;padding:0}li{-ms-flex-align:baseline;align-items:baseline;display:-ms-flexbox;display:flex;padding:10px 15px;border-bottom:1px solid #e5e5e5}li img{max-width:100%}li:last-of-type{border-bottom:0}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/attachments.component.scss\n// module id = 602\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying previous test runs on a station.\n */\n\nimport { trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { FlashMessageService } from '../../core/flash-message.service';\nimport { washAndExpandIn } from '../../shared/animations';\nimport { Station, StationStatus } from '../../shared/models/station.model';\nimport { TestState, TestStatus } from '../../shared/models/test-state.model';\nimport { messageFromErrorResponse } from '../../shared/util';\n\nimport { HistoryItem, HistoryItemStatus } from './history-item.model';\nimport { HistoryService } from './history.service';\n\n// Emitted by the component when a test is selected or deselected.\nexport class TestSelectedEvent {\n  constructor(public test: TestState) {}\n}\n\nconst listItemHeight = 48;\n\n@Component({\n  animations: [trigger('animateIn', washAndExpandIn(listItemHeight))],\n  selector: 'htf-history',\n  template: require('./history.component.html'),\n  styles: [require('./history.component.scss')],\n})\nexport class HistoryComponent implements OnChanges {\n  @Input() selectedTest: TestState|null;\n  @Input() station: Station;\n  @Output() onSelectTest = new EventEmitter<TestSelectedEvent>();\n\n  readonly collapsedNumTests = 5;\n  HistoryItemStatus = HistoryItemStatus;\n  TestStatus = TestStatus;\n  expanded = false;\n  hasError = false;\n  history: HistoryItem[] = [];\n  historyFromDiskEnabled = false;\n  isLoading = false;\n\n  private lastClickedItem: HistoryItem|null = null;\n\n  constructor(\n      private historyService: HistoryService,\n      private flashMessage: FlashMessageService) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('station' in changes) {\n      if (this.station.status === StationStatus.online) {\n        // TODO(kenadia): The current behavior is that this only triggers when\n        // the station page first loads. To better handle edge cases, the\n        // history list should be refreshed when a new connection to a station\n        // is established, for example if the user clicks on the refresh station\n        // button, or if a station that was offline comes online.\n        // I think that we can best accomplish this by making station objects\n        // immutable. This will be done as part of a future refactor.\n        this.loadHistory();\n        this.history = this.historyService.getHistory(this.station);\n      }\n    }\n  }\n\n  isSelected(historyItem: HistoryItem) {\n    return (\n        historyItem.status === HistoryItemStatus.loaded &&\n        historyItem.testState === this.selectedTest);\n  }\n\n  onClick(historyItem: HistoryItem) {\n    this.lastClickedItem = historyItem;\n\n    if (historyItem.status === HistoryItemStatus.loading) {\n      return;\n    }\n\n    // If the test state has been loaded already, select/deselect it.\n    if (historyItem.status === HistoryItemStatus.loaded) {\n      this.selectTest(historyItem.testState);\n\n      if (historyItem.testState === this.selectedTest) {\n        // The fileName will be null if the history item was created from a test\n        // record/state retrieved by the StationService. We are unable to access\n        // attachments until we know the file name, so try to retrieve it now.\n        if (historyItem.testState.fileName === null) {\n          this.historyService.retrieveFileName(this.station, historyItem)\n              .catch(() => {\n                if (this.historyFromDiskEnabled) {\n                  this.flashMessage.warn(\n                      'Could not retrieve history from disk, so attachments ' +\n                      'are not available. You may try again later.');\n                }\n              });\n        }\n      }\n      return;\n    }\n\n    this.historyService.loadItem(this.station, historyItem)\n        .then((testState: TestState) => {\n          if (this.lastClickedItem === historyItem) {\n            this.selectTest(testState);\n          }\n        })\n        .catch(error => {\n          console.error(error.stack);\n          const tooltip = messageFromErrorResponse(error);\n          this.flashMessage.error('Error loading history item.', tooltip);\n        });\n  }\n\n  toggleExpanded() {\n    this.expanded = !this.expanded;\n  }\n\n  private loadHistory() {\n    this.hasError = false;\n    this.isLoading = true;\n    this.historyFromDiskEnabled = false;\n\n    this.historyService.refreshList(this.station)\n        .then(() => {\n          this.isLoading = false;\n          this.historyFromDiskEnabled = true;\n        })\n        .catch(error => {\n          this.isLoading = false;\n          this.hasError = true;\n          this.historyFromDiskEnabled = error.status !== 404;\n        });\n  }\n\n  private selectTest(test: TestState) {\n    if (test === this.selectedTest) {\n      this.selectedTest = null;\n    } else {\n      this.selectedTest = test;\n    }\n    this.onSelectTest.emit(new TestSelectedEvent(this.selectedTest));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/history.component.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Info about a file attached to a test.\n */\n\nexport class Attachment {\n  mimeType: string;\n  name: string;\n  phaseDescriptorId: number;\n  phaseName: string;\n  sha1: string;\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: Attachment) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/attachment.model.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"htf-layout-widget\\\">\\n\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>History</div>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <button\\n      *ngIf=\\\"history.length > collapsedNumTests\\\"\\n      type=\\\"button\\\"\\n      class=\\\"htf-rounded-button-grey\\\"\\n      (click)=\\\"toggleExpanded()\\\">\\n      {{ expanded? 'Collapse' : 'Expand' }}\\n    </button>\\n  </div>\\n\\n  <ul class=\\\"htf-layout-widget-list history-list\\\">\\n    <ng-container *ngFor=\\\"let historyItem of history; let i = index\\\">\\n      <li\\n        class=\\\"history-item-container\\\"\\n        htfTooltip=\\\"{{ historyItem.startTimeMillis | date:'M/d/yy h:mma' }}\\\"\\n        *ngIf=\\\"expanded || i < collapsedNumTests\\\"\\n        [@animateIn]=\\\"historyItem.drawAttention ? 'in' : ''\\\"\\n        (@animateIn.done)=\\\"historyItem.drawAttention = false\\\"\\n        [ngSwitch]=\\\"historyItem.status\\\"\\n        [class.is-selected]=\\\"isSelected(historyItem)\\\"\\n        (click)=\\\"onClick(historyItem)\\\">\\n\\n        <!-- Wrap list item contents in an extra div to enable a “slide down” animation effect. -->\\n        <div class=\\\"history-item htf-layout-header\\\">\\n          <div class=\\\"history-item-name-container\\\">\\n            <div class=\\\"history-item-name\\\">\\n              {{ historyItem.dutId || historyItem.fileName }}\\n            </div>\\n            <div class=\\\"u-font-size-small\\\">\\n              Started {{ historyItem.startTimeMillis | timeAgo }}\\n            </div>\\n          </div>\\n          <div *ngSwitchCase=\\\"HistoryItemStatus.unloaded\\\" class=\\\"history-item-status\\\">\\n            Click to load.\\n          </div>\\n          <div *ngSwitchCase=\\\"HistoryItemStatus.loading\\\" class=\\\"history-item-status\\\">\\n            Loading...\\n          </div>\\n          <div *ngSwitchCase=\\\"HistoryItemStatus.error\\\" class=\\\"history-item-status error-text\\\">\\n            An error occurred.\\n          </div>\\n          <div\\n            *ngSwitchCase=\\\"HistoryItemStatus.loaded\\\"\\n            class=\\\"htf-status-indicator\\\"\\n            [ngClass]=\\\"historyItem.testState.status | statusToClass\\\">\\n            {{ historyItem.testState.status | statusToText }}\\n          </div>\\n        </div>\\n      </li>\\n    </ng-container>\\n    <li *ngIf=\\\"!expanded && history.length > collapsedNumTests\\\" class=\\\"status-text\\\">\\n      Not showing {{ history.length - collapsedNumTests }} additional test\\n      {{ history.length - collapsedNumTests === 1? 'run' : 'runs'}}.\\n    </li>\\n    <li *ngIf=\\\"history.length === 0 && !isLoading && !hasError\\\" class=\\\"status-text\\\">\\n      There are no known completed test runs.\\n    </li>\\n    <li *ngIf=\\\"isLoading\\\" class=\\\"status-text\\\">\\n      Loading history from the server...\\n    </li>\\n    <li *ngIf=\\\"hasError && !historyFromDiskEnabled\\\" class=\\\"status-text\\\">\\n      History from disk is disabled.\\n    </li>\\n    <li *ngIf=\\\"hasError && historyFromDiskEnabled\\\" class=\\\"status-text\\\">\\n      <span class=\\\"u-text-color-error\\\">\\n        Could not retrieve test history from the server.\\n      </span>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/history.component.html\n// module id = 605\n// module chunks = 1","module.exports = \".history-item-container{cursor:pointer;overflow:hidden}.history-item-container.is-selected{background:rgba(0,119,255,.2);border:2px solid rgba(0,119,255,.8)}.history-item{height:48px;line-height:47px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.history-item-name-container{-ms-flex-positive:1;flex-grow:1;line-height:initial;min-width:0}.history-item-name{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.history-item-status{color:#949a9f;font-size:12px;padding:10px 0;text-align:center;margin-left:15px;margin-right:-15px;min-width:100px}.status-text{color:#949a9f;font-size:12px;padding:10px 0;text-align:center}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/history.component.scss\n// module id = 606\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying a test run's logs.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { logLevels } from '../../shared/models/log-record.model';\nimport { TestState } from '../../shared/models/test-state.model';\n\n@Component({\n  selector: 'htf-logs',\n  template: require('./logs.component.html'),\n  styles: [require('./logs.component.scss')],\n})\nexport class LogsComponent {\n  @Input() test: TestState;\n\n  expanded = false;\n\n  get collapsedErrorCount() {\n    // Count the number of log errors, excluding the most recent log line, which\n    // is always visible.\n    let count = 0;\n    for (const log of this.test.logs) {\n      if (log.level > logLevels.warning) {\n        count += 1;\n      }\n    }\n    if (this.test.logs[0].level > logLevels.warning) {\n      count -= 1;\n    }\n    return count;\n  }\n\n  toggleExpanded() {\n    this.expanded = !this.expanded;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/logs.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div *ngIf=\\\"test\\\" class=\\\"htf-layout-widget\\\">\\n\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>Logs</div>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <button\\n      *ngIf=\\\"test.logs.length > 0\\\"\\n      type=\\\"button\\\"\\n      class=\\\"htf-rounded-button-grey\\\"\\n      (click)=\\\"toggleExpanded()\\\">\\n      {{ expanded? 'Collapse' : 'Expand' }}\\n    </button>\\n  </div>\\n\\n  <div\\n    *ngIf=\\\"test.logs.length === 0\\\"\\n    class=\\\"htf-layout-widget-body htf-support-text\\\">\\n    There are no logs yet.\\n  </div>\\n\\n  <ul *ngIf=\\\"!expanded && test.logs.length > 0\\\">\\n    <li [ngClass]=\\\"test.logs[0].level | logLevelToClass\\\" class=\\\"log-message\\\">\\n\\n      <div class=\\\"timestamp-column\\\">\\n        {{ test.logs[0].timestampMillis | date:'mediumTime' }}\\n        <div class=\\\"logger-name\\\">{{ test.logs[0].loggerName }}</div>\\n      </div>\\n\\n      <div class=\\\"log-message-content\\\">{{ test.logs[0].message }}</div>\\n\\n    </li>\\n    <li\\n      *ngIf=\\\"!expanded && test.logs.length > 1\\\"\\n      class=\\\"htf-support-text\\\">\\n      Not showing {{ test.logs.length - 1 }} additional log\\n      {{ test.logs.length - 1 === 1? 'message' : 'messages'}}.&nbsp;\\n      <span *ngIf=\\\"collapsedErrorCount > 0\\\" class=\\\"u-text-color-error\\\">\\n        {{ collapsedErrorCount }} additional\\n        {{ collapsedErrorCount === 1? 'error' : 'errors' }}.\\n      </span>\\n    </li>\\n  </ul>\\n\\n  <ul *ngIf=\\\"expanded && test.logs.length > 0\\\">\\n    <li\\n      *ngFor=\\\"let log of test.logs\\\"\\n      class=\\\"log-message\\\"\\n      [ngClass]=\\\"log.level | logLevelToClass\\\">\\n\\n      <div class=\\\"timestamp-column\\\">\\n        {{ log.timestampMillis | date:'mediumTime' }}\\n        <div class=\\\"logger-name\\\">{{ log.loggerName }}</div>\\n      </div>\\n\\n      <div class=\\\"log-message-content\\\">{{ log.message }}</div>\\n\\n    </li>\\n  </ul>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/logs.component.html\n// module id = 608\n// module chunks = 1","module.exports = \"ul{list-style:none;margin:0;padding:0;font-size:12px}li{display:-ms-flexbox;display:flex;padding:10px 15px;border-bottom:1px solid #e5e5e5}li:last-of-type{border-bottom:0}.log-message{font-family:monospace,serif}.timestamp-column{font-size:10px;margin-right:10px;max-width:170px;min-width:170px}.logger-name{color:#949a9f}.log-message-content{white-space:pre-wrap;word-break:break-all}.ng-log-level-warning{background:rgba(255,229,77,.2)}.ng-log-level-error{background:rgba(255,93,78,.25)}.ng-log-level-critical{background:rgba(255,93,78,.45)}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/logs.component.scss\n// module id = 609\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying the phases of a test.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { TestState } from '../../shared/models/test-state.model';\n\n@Component({\n  selector: 'htf-phase-list',\n  template: require('./phase-list.component.html'),\n})\nexport class PhaseListComponent {\n  @Input() test: TestState;\n\n  showMeasurements = false;\n\n  toggleMeasurements() {\n    this.showMeasurements = !this.showMeasurements;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/phase-list.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"htf-layout-widget\\\" *ngIf=\\\"test\\\">\\n\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>Phases</div>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"htf-rounded-button-grey\\\"\\n      (click)=\\\"toggleMeasurements()\\\">\\n      {{ showMeasurements ? 'Collapse' : 'Expand' }} all\\n    </button>\\n  </div>\\n\\n  <ul class=\\\"htf-layout-widget-list\\\">\\n    <li *ngFor=\\\"let phase of test.phases\\\">\\n      <htf-phase\\n        [phase]=\\\"phase\\\"\\n        [expand]=\\\"showMeasurements\\\">\\n      </htf-phase>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/phase-list.component.html\n// module id = 611\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying the phases of a test.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { MeasurementStatus } from '../../shared/models/measurement.model';\nimport { Phase, PhaseStatus } from '../../shared/models/phase.model';\n\n@Component({\n  selector: 'htf-phase',\n  template: require('./phase.component.html'),\n  styles: [require('./phase.component.scss')],\n})\nexport class PhaseComponent {\n  @Input() phase: Phase;\n  @Input() expand: boolean;\n\n  MeasurementStatus = MeasurementStatus;\n  PhaseStatus = PhaseStatus;\n\n  get showMeasurements() {\n    return this.expand && this.phase.measurements.length > 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/phase.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"htf-layout-header\\\" [class.header-with-measurements]=\\\"showMeasurements\\\">\\n  <span class=\\\"u-clamp-text\\\">\\n    <span class=\\\"phase-name\\\">{{ phase.name }}</span>\\n    <span *ngIf=\\\"phase.status !== PhaseStatus.waiting\\\">\\n      &nbsp;{{ phase | elapsedTime:'(%s)' }}\\n    </span>\\n  </span>\\n\\n  <div class=\\\"u-flex-grow\\\"></div>\\n  <div\\n    class=\\\"htf-status-indicator\\\"\\n    [ngClass]=\\\"phase.status | statusToClass\\\">\\n    {{ phase.status | statusToText }}\\n  </div>\\n</div>\\n\\n<table\\n  *ngIf=\\\"showMeasurements\\\"\\n  class=\\\"measurement-list\\\"\\n  [ngClass]=\\\"phase.status | statusToClass\\\">\\n  <thead>\\n    <td class=\\\"measurement-column-name\\\">Measurement name</td>\\n    <td class=\\\"measurement-column-value\\\">Value</td>\\n    <td class=\\\"measurement-column-validators\\\">Validators</td>\\n    <td class=\\\"measurement-column-result\\\">Result</td>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let measurement of phase.measurements\\\">\\n      <td class=\\\"measurement-column-name\\\">{{ measurement.name }}</td>\\n      <td class=\\\"measurement-column-value\\\">\\n        <htf-trimmed-text [maxChars]=\\\"80\\\" [content]=\\\"measurement.measuredValue\\\">\\n        </htf-trimmed-text>\\n      </td>\\n      <td class=\\\"measurement-column-validators\\\">{{ measurement.validators }}</td>\\n      <td\\n        [ngSwitch]=\\\"measurement.status\\\"\\n        class=\\\"measurement-column-result\\\">\\n        <span *ngSwitchCase=\\\"MeasurementStatus.pass\\\">Pass</span>\\n        <span *ngSwitchCase=\\\"MeasurementStatus.fail\\\">Fail</span>\\n        <span *ngSwitchDefault>—</span>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/phase.component.html\n// module id = 613\n// module chunks = 1","module.exports = \".header-with-measurements{border-bottom:1px solid #e5e5e5}.measurement-list{border-collapse:separate;border-right:100px solid rgba(50,50,50,.1);border-spacing:0 3px;font-size:12px;padding:10px 15px;width:100%}.measurement-list.ng-status-fail{border-right-color:rgba(255,93,78,.1)}.measurement-list.ng-status-pass{border-right-color:rgba(0,232,157,.1)}.measurement-list.ng-status-running{border-right-color:rgba(0,119,255,.1)}.measurement-list thead{text-decoration:underline}.measurement-list tbody{vertical-align:top}.measurement-list td{padding:0}.measurement-list .measurement-column-name{width:30%;padding-right:5px}.measurement-list .measurement-column-value{width:30%;padding-right:5px}.measurement-list .measurement-column-validators{width:30%;padding-right:5px}.measurement-list .measurement-column-result{text-align:right}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/phase.component.scss\n// module id = 614\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Component representing a station.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { ConfigService } from '../../core/config.service';\nimport { Station } from '../../shared/models/station.model';\nimport { TestState } from '../../shared/models/test-state.model';\n\nimport { StationService } from './station.service';\n\nexport class StationDeselectedEvent {}\n\nconst subscriptionRetryMs = 200;\nconst subscriptionRetryBackoff = 1.08;\nconst subscriptionRetryMax = 1500;\n\n@Component({\n  selector: 'htf-station',\n  template: require('./station.component.html'),\n  styles: [require('./station.component.scss')],\n})\nexport class StationComponent implements OnDestroy, OnInit {\n  @Input() selectedStation: Station;\n  @Output() onDeselectStation = new EventEmitter<StationDeselectedEvent>();\n\n  selectedTest: TestState|null = null;  // Selected in the history.\n\n  constructor(\n      private stationService: StationService, private config: ConfigService) {}\n\n  get activeTest(): TestState|null {\n    if (this.selectedTest !== null) {\n      return this.selectedTest;\n    }\n    return this.stationService.getTest(this.selectedStation);\n  }\n\n  get dashboardEnabled() {\n    return this.config.dashboardEnabled;\n  }\n\n  get hasError() {\n    return this.stationService.hasError;\n  }\n\n  get isLoading() {\n    return this.stationService.isSubscribing;\n  }\n\n  get isOnline() {\n    return !(this.hasError || this.isLoading);\n  }\n\n  ngOnInit() {\n    this.stationService.subscribe(\n        this.selectedStation, subscriptionRetryMs, subscriptionRetryBackoff,\n        subscriptionRetryMax);\n  }\n\n  ngOnDestroy() {\n    this.stationService.unsubscribe();\n  }\n\n  goBack() {\n    this.onDeselectStation.emit(new StationDeselectedEvent());\n  }\n\n  manualReload() {\n    this.stationService.refresh();\n  }\n\n  onSelectTest(test: TestState) {\n    this.selectedTest = test;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/station.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"station\\\">\\n\\n  <div class=\\\"nav-bar\\\">\\n    <button\\n      *ngIf=\\\"dashboardEnabled\\\"\\n      (click)=\\\"goBack()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"htf-link-button\\\">\\n      ‹ Return to station selection\\n    </button>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <button\\n      (click)=\\\"manualReload()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"htf-link-button\\\">\\n      Refresh station\\n    </button>\\n  </div>\\n\\n  <div class=\\\"status-bar\\\">\\n    <div class=\\\"status-bar-row u-font-size-large\\\">\\n      <div>{{ selectedStation.label }}</div>\\n      <div class=\\\"u-flex-grow\\\"></div>\\n      <span *ngIf=\\\"isOnline\\\">Status: Connected</span>\\n      <span *ngIf=\\\"!isOnline\\\" class=\\\"u-text-color-error\\\">Status: Offline</span>\\n    </div>\\n    <div class=\\\"status-bar-row u-text-color-deemphasize\\\">\\n      <span>{{ selectedStation.testDescription }}</span>\\n      <div class=\\\"u-flex-grow\\\"></div>\\n      <span class=\\\"htf-support-text\\\">{{ selectedStation.host }}:{{ selectedStation.port }}</span>\\n    </div>\\n  </div>\\n\\n  <div [class.station--is-offline]=\\\"!isOnline\\\">\\n    <div class=\\\"htf-layout-widgets-container htf-layout-widgets-row\\\">\\n      <htf-user-input-plug [test]=\\\"activeTest\\\"></htf-user-input-plug>\\n    </div>\\n\\n    <div class=\\\"htf-layout-widgets-container\\\">\\n      <div class=\\\"htf-layout-widgets-left\\\">\\n        <div\\n          *ngIf=\\\"selectedTest !== null\\\"\\n          class=\\\"past-test-warning htf-layout-widget\\\">\\n          <div class=\\\"htf-layout-widget-header\\\">\\n            <div>Displaying test record for a previous test run</div>\\n            <span>&nbsp;({{ selectedTest.startTimeMillis | timeAgo }})</span>\\n            <div class=\\\"u-flex-grow\\\"></div>\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"htf-rounded-button-grey\\\"\\n              (click)=\\\"onSelectTest(null)\\\">\\n              Return to current test\\n            </button>\\n          </div>\\n        </div>\\n\\n        <htf-test-summary [test]=\\\"activeTest\\\"></htf-test-summary>\\n        <htf-logs [test]=\\\"activeTest\\\"></htf-logs>\\n        <htf-attachments [test]=\\\"activeTest\\\"></htf-attachments>\\n        <htf-phase-list [test]=\\\"activeTest\\\"></htf-phase-list>\\n      </div>\\n\\n      <div class=\\\"htf-layout-widgets-right\\\">\\n        <htf-history\\n          [selectedTest]=\\\"selectedTest\\\"\\n          [station]=\\\"selectedStation\\\"\\n          (onSelectTest)=\\\"onSelectTest($event.test)\\\">\\n        </htf-history>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/station.component.html\n// module id = 616\n// module chunks = 1","module.exports = \".nav-bar{display:-ms-flexbox;display:flex;font-size:12px;margin-bottom:12px}.status-bar{margin-bottom:16px}.status-bar-row{-ms-flex-align:baseline;align-items:baseline;display:-ms-flexbox;display:flex}.past-test-warning{color:#ff5d4e}.past-test-warning .htf-layout-widget-header{border:0}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/station.component.scss\n// module id = 617\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Widget displaying summary information about a test.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { Phase, PhaseStatus } from '../../shared/models/phase.model';\nimport { TestState, TestStatus } from '../../shared/models/test-state.model';\nimport { ProgressBarComponent } from '../../shared/progress-bar.component';\n\n@Component({\n  selector: 'htf-test-summary',\n  template: require('./test-summary.component.html'),\n  styles: [require('./test-summary.component.scss')],\n})\nexport class TestSummaryComponent implements OnChanges {\n  @Input() test: TestState;\n  @ViewChild(ProgressBarComponent) progressBar: ProgressBarComponent;\n\n  ngOnChanges(changes: SimpleChanges) {\n    // When we get a new test, animate the progress bar from zero.\n    if ('test' in changes && this.progressBar) {\n      this.progressBar.reset();\n    }\n  }\n\n  get completedPhaseCount() {\n    if (this.test.status === TestStatus.waiting) {\n      return 0;\n    } else if (this.test.status === TestStatus.pass) {\n      return this.test.phases.length;\n    }\n\n    let completedPhases = 0;\n    for (const phase of this.test.phases) {\n      if (phase.status === PhaseStatus.running ||\n          phase.status === PhaseStatus.fail) {\n        break;\n      }\n      completedPhases++;\n    }\n    return completedPhases;\n  }\n\n  get progressValue() {\n    return this.completedPhaseCount / this.test.phases.length;\n  }\n\n  get runningPhase(): Phase|null {\n    if (this.test.status === TestStatus.running) {\n      for (const phase of this.test.phases) {\n        if (phase.status === PhaseStatus.running) {\n          return phase;\n        }\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/stations/station/test-summary.component.ts","module.exports = \"<!--\\n Copyright 2022 Google LLC\\n\\n Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n you may not use this file except in compliance with the License.\\n You may obtain a copy of the License at\\n\\n      http://www.apache.org/licenses/LICENSE-2.0\\n\\n Unless required by applicable law or agreed to in writing, software\\n distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n See the License for the specific language governing permissions and\\n limitations under the License.\\n-->\\n\\n<div class=\\\"htf-layout-widget\\\" *ngIf=\\\"test\\\">\\n\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>Current test: {{ test.name }}</div>\\n    <div *ngIf=\\\"test.startTimeMillis\\\">\\n      &nbsp;{{ test | elapsedTime:'(%s)' }}\\n    </div>\\n    <div class=\\\"u-flex-grow\\\"></div>\\n    <div\\n      class=\\\"htf-status-indicator\\\"\\n      [ngClass]=\\\"test.status | statusToClass\\\">\\n      {{ test.status | statusToText }}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"htf-layout-widget-body\\\">\\n    <div class=\\\"u-display-flex\\\">\\n      <div>\\n        DUT: {{ test.dutId === null ? '—' : test.dutId }}\\n      </div>\\n      <div class=\\\"u-flex-grow\\\"></div>\\n      <div>\\n        Started: {{ test.startTimeMillis ? (test.startTimeMillis | date:'medium') : '—' }}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"progress-bar-container htf-layout-widget-body\\\">\\n    <div>\\n      Ran {{ completedPhaseCount }} of {{ this.test.phases.length }}\\n      {{ completedPhaseCount === 1? 'phase' : 'phases' }}\\n    </div>\\n    <htf-progress-bar [value]=\\\"progressValue\\\"></htf-progress-bar>\\n  </div>\\n\\n  <div *ngIf=\\\"runningPhase !== null\\\" class=\\\"phase-container htf-layout-widget-body\\\">\\n    <htf-phase [phase]=\\\"runningPhase\\\" [expand]=\\\"true\\\"></htf-phase>\\n  </div>\\n</div>\\n\\n<!-- Empty state -->\\n<div class=\\\"htf-layout-widget\\\" *ngIf=\\\"!test\\\">\\n  <div class=\\\"htf-layout-widget-header\\\">\\n    <div>Test: —</div>\\n  </div>\\n  <div class=\\\"htf-layout-widget-body\\\">\\n    <div class=\\\"htf-support-text\\\">\\n      <em>No test information to display</em>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/test-summary.component.html\n// module id = 619\n// module chunks = 1","module.exports = \".htf-status-indicator{line-height:53px}.progress-bar-container{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex;font-size:12px;white-space:nowrap}htf-progress-bar{display:block;-ms-flex-positive:1;flex-grow:1;height:22px;margin-left:15px;width:100%}.phase-container{padding:0}:host ::ng-deep htf-phase .phase-name{font-weight:bold}:host ::ng-deep htf-phase .phase-name::before{content:\\\"Current phase: \\\"}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stations/station/test-summary.component.scss\n// module id = 620\n// module chunks = 1","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A phase of a test.\n *\n * May combine both PhaseDescriptor and PhaseState information from the backend.\n */\n\nimport { Attachment } from './attachment.model';\nimport { Measurement } from './measurement.model';\n\n// Enum values must not overlap between any of the status enums.\n// See status-pipes.ts.\nexport enum PhaseStatus {\n  waiting = 3,\n  running,\n  pass,\n  fail,\n  skip,\n  error,\n}\n\nexport class Phase {\n  attachments: Attachment[];\n  descriptorId: number;\n  endTimeMillis: number|null;\n  name: string;\n  measurements: Measurement[];\n  status: PhaseStatus;\n  startTimeMillis: number|null;  // Should only be null if phase is waiting.\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: Phase) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/phase.model.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Contains classes that are re-used across the features modules.\n *\n * See https://angular.io/docs/ts/latest/guide/ngmodule.html for more info\n * about modules in Angular.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { ElapsedTimePipe } from './elapsed-time.pipe';\nimport { FocusDirective } from './focus.directive';\nimport { GenealogyNodeComponent } from './genealogy-node.component';\nimport { LogLevelToClassPipe } from './log-level-to-class.pipe';\nimport { ObjectToSortedValuesPipe } from './object-to-sorted-values.pipe';\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { SockJsService } from './sock-js.service';\nimport { StatusToClassPipe, StatusToTextPipe } from './status-pipes';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { TimeService } from './time.service';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TrimmedTextComponent } from './trimmed-text.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n  ],\n  declarations: [\n    ElapsedTimePipe,\n    FocusDirective,\n    GenealogyNodeComponent,\n    LogLevelToClassPipe,\n    ObjectToSortedValuesPipe,\n    ProgressBarComponent,\n    StatusToClassPipe,\n    StatusToTextPipe,\n    TimeAgoPipe,\n    TrimmedTextComponent,\n    TooltipDirective,\n  ],\n  providers: [\n    SockJsService,\n    TimeService,\n  ],\n  exports: [\n    CommonModule,\n    ElapsedTimePipe,\n    FocusDirective,\n    GenealogyNodeComponent,\n    LogLevelToClassPipe,\n    ObjectToSortedValuesPipe,\n    ProgressBarComponent,\n    StatusToClassPipe,\n    StatusToTextPipe,\n    TimeAgoPipe,\n    TrimmedTextComponent,\n    TooltipDirective,\n  ],\n})\nexport class SharedModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/shared.module.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Service which provides the current time in milliseconds.\n */\n\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/publish';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nconst UPDATE_INTERVAL_MS = 100;\n\n@Injectable()\nexport class TimeService {\n  readonly observable = Observable.interval(UPDATE_INTERVAL_MS)\n                            .map(() => {\n                              this.last = Date.now();\n                              return this.last;\n                            })\n                            .publish();\n  last: number|null = null;\n\n  constructor() {\n    this.observable.connect();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/time.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A log record of a test.\n */\n\nexport const logLevels = {\n  debug: 10,\n  info: 20,\n  warning: 30,\n  error: 40,\n  critical: 50,\n};\n\nexport class LogRecord {\n  level: number;\n  lineNumber: number;\n  loggerName: string;\n  message: string;\n  source: string;\n  timestampMillis: number;\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: LogRecord) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/log-record.model.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provider for SockJS.\n *\n * This allows us to mock socket communication in unit tests.\n */\n\nimport { Injectable } from '@angular/core';\n\n// Global provided by the sockjs_client library.\ndeclare const SockJS: new (url: string) => SockJsObject;\n\nexport interface SockJsObject {\n  close: () => void;\n  onclose: {};\n  onmessage: {};\n  onopen: {};\n}\n\nexport interface SockJsMessage { data: string; }\n\n@Injectable()\nexport class SockJsService {\n  sockJs = SockJS;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/sock-js.service.ts","/**\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A measurement in a phase of a test.\n */\n\n// Enum values must not overlap between any of the status enums.\n// See status-pipes.ts.\nexport enum MeasurementStatus {\n  unset,\n  pass,\n  fail,\n}\n\nexport class Measurement {\n  name: string;\n  validators: {}|null;\n  measuredValue: string|null;\n  status: MeasurementStatus;\n\n  // Using the class as the interface for its own constructor allows us to call\n  // the constructor in named-argument style.\n  constructor(params: Measurement) {\n    Object.assign(this, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/@angularclass/hmr-loader!./node_modules/tslint-loader!./src/app/shared/models/measurement.model.ts","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timeago.js/esm/register.js\n// module id = 99\n// module chunks = 1"],"sourceRoot":""}